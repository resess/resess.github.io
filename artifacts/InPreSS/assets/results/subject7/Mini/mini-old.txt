Line 216 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> root = JsonCache.Factory.instance.create();
Line 216 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> root = JsonCache.Factory.instance.create();
Line 287 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> SimpleType.constructUnsafe(JsonNode.class);
NO_BINDINGS=Func5844();
_class=Func5840();
_bindings=Func5839(com.fasterxml.jackson.databind.type.TypeBase.NO_BINDINGS);
com.fasterxml.jackson.databind.type.SimpleType#constructUnsafe(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/type/SimpleType;=Func5838();
Line 287 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> SimpleType.constructUnsafe(JsonNode.class);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5837();
EMPTY_BINDINGS=Func5836(stack2);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5835();
Func5834(stack2);
asStatic=Func5833(bindings);
_bindings=Func5831(bindings);
_superInterfaces=Func5830();
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5828();
asStatic=Func5826(bindings);
_bindings=Func5818();
Line 304 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Base64Variants.getDefaultVariant() // 2.1
$stack14=Func5812(com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_BASE);
asStatic=Func5811();
$stack3=Func5808();
com.fasterxml.jackson.databind.cfg.BaseSettings#withClassIntrospector(Lcom/fasterxml/jackson/databind/introspect/ClassIntrospector;)Lcom/fasterxml/jackson/databind/cfg/BaseSettings;=Func5807(stack3, this);
_mask=Func5805();
_mask=Func5803();
_defaultState=Func5802();
_mask=Func5801(this);
_defaultState=Func5800();
_mask=Func5799(this);
_defaultState=Func5798();
_mask=Func5797(this);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5792(this._mask);
flags=Func5791(stack12);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5786(this._mask);
flags=Func5785(flags, stack12);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5780(this._mask);
flags=Func5779(flags, stack12);
Line 99 com.fasterxml.jackson.databind.cfg.MapperConfig:collectFeatureDefaults ---> for (F value : enumClass.getEnumConstants()) {
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func5778(flags);
DEFAULT_MAPPER_FEATURES=Func5777(stack1);
_mapperFeatures=Func5775(base, com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES);
Line 115 com.fasterxml.jackson.databind.SerializationConfig:<init> ---> _serFeatures = collectFeatureDefaults(SerializationFeature.class);
_mask=Func5769();
WRAP_ROOT_VALUE=Func5768(stack0);
_mask=Func5764();
INDENT_OUTPUT=Func5763(stack1);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func5630();
Line 115 com.fasterxml.jackson.databind.SerializationConfig:<init> ---> _serFeatures = collectFeatureDefaults(SerializationFeature.class);
Func5629(base);
$stack6=Func5628(base, com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES);
Func5627();
_base=Func5626(base);
_mapperFeatures=Func5625(mapperFeatures);
_mixIns=Func5623();
_subtypeResolver=Func5622();
_rootNames=Func5621();
_rootName=Func5620();
_view=Func5619();
_attributes=Func5614();
_configOverrides=Func5613();
Line 104 com.fasterxml.jackson.databind.DeserializationConfig:<init> ---> _deserFeatures = collectFeatureDefaults(DeserializationFeature.class);
_mask=Func5607();
USE_BIG_DECIMAL_FOR_FLOATS=Func5606(stack0);
_mask=Func5587();
FAIL_ON_UNKNOWN_PROPERTIES=Func5586(stack4);
_mask=Func5517();
UNWRAP_ROOT_VALUE=Func5516(stack18);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func5387(this._mask);
Line 104 com.fasterxml.jackson.databind.DeserializationConfig:<init> ---> _deserFeatures = collectFeatureDefaults(DeserializationFeature.class);
_nodeFactory=Func5380();
_problemHandlers=Func5379();
_parserFeatures=Func5378();
_parserFeaturesToChange=Func5377();
_formatReadFeatures=Func5376();
_formatReadFeaturesToChange=Func5375();
_deserializationConfig=Func5374(u7);
_additionalDeserializers=Func5373();
_additionalKeyDeserializers=Func5372();
_additionalKeyDeserializers=Func5371(stack14);
_modifiers=Func5370();
_modifiers=Func5369(stack11);
_abstractTypeResolvers=Func5368();
_abstractTypeResolvers=Func5367(stack8);
_valueInstantiators=Func5366();
_valueInstantiators=Func5365(stack6);
Line 156 com.fasterxml.jackson.databind.DeserializationContext:<init> ---> if (df == null) {
Line 159 com.fasterxml.jackson.databind.DeserializationContext:<init> ---> _factory = df;
$stack3=Func5363();
Line 59 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> public DeserializerCache() { }
Line 42 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> final protected ConcurrentHashMap<JavaType, JsonDeserializer<Object>> _cachedDeserializers
_incompleteDeserializers=Func5362();
_cache=Func5360(this, stack3);
_featureFlags=Func5359();
_config=Func5358();
_injectableValues=Func5357();
_view=Func5356();
_attributes=Func5355();
_deserializationContext=Func5354();
_additionalSerializers=Func5352();
_additionalKeySerializers=Func5351();
_additionalKeySerializers=Func5350(stack6);
_modifiers=Func5349();
_modifiers=Func5348(stack4);
_factoryConfig=Func5347();
_base=Func5338();
_mapperFeatures=Func5337(this._mapperFeatures, com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT, this._serFeatures, this._mask);
_mixIns=Func5336();
_rootName=Func5335();
_view=Func5334();
_attributes=Func5333();
_configOverrides=Func5332();
_serFeatures=Func5331(this._mask, com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT, this._serFeatures);
_serializationConfig=Func5329();
_base=Func5321(src._base);
_mapperFeatures=Func5320(this._mapperFeatures, this._parserFeaturesToChange, this._formatReadFeaturesToChange, this._parserFeatures, this._formatReadFeatures, this._mask, com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, this._deserFeatures);
_mixIns=Func5319(src._mixIns);
_rootName=Func5318(src._rootName);
_view=Func5317(src._view);
_attributes=Func5316(src._attributes);
_configOverrides=Func5315(src._configOverrides);
_nodeFactory=Func5314(src._nodeFactory);
Line 216 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> root = JsonCache.Factory.instance.create();
Line 217 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> ObjectMapper mapper = root.getMapper();
Line 218 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JavaTimeModule());
_keySerializers=Func5313();
Line 218 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JavaTimeModule());
com.fasterxml.jackson.databind.module.SimpleModule#getTypeId()Ljava/lang/Object;=Func5301(this._mask, this._mapperFeatures);
_registeredModuleTypes=Func5298();
$stack15=Func5297(typeId, this._registeredModuleTypes);
Line 741 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
com.fasterxml.jackson.databind.module.SimpleModule#getModuleName()Ljava/lang/String;=Func5296();
Line 742 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
Line 745 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func5295();
Line 746 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
_additionalSerializers=Func5281();
_additionalKeySerializers=Func5280(this._additionalKeySerializers, this._modifiers);
_modifiers=Func5279(this._additionalKeySerializers, this._modifiers);
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#withAdditionalSerializers(Lcom/fasterxml/jackson/databind/ser/Serializers;)Lcom/fasterxml/jackson/databind/cfg/SerializerFactoryConfig;=Func5277(this._factoryConfig, this._additionalKeySerializers, this._modifiers, stack5);
$stack4=Func5274(config);
Func5273(this, config);
_cache=Func5233(src._cache);
_config=Func5231(src._config);
_featureFlags=Func5230(src._featureFlags);
_view=Func5229(src._view);
_parser=Func5228();
_injectableValues=Func5227(src._injectableValues);
_attributes=Func5226(src._attributes);
_additionalSerializers=Func5212(this._keySerializers, this._additionalSerializers, this._modifiers);
_additionalKeySerializers=Func5211(this._keySerializers);
_modifiers=Func5210(this._keySerializers, this._additionalSerializers, this._modifiers);
_factoryConfig=Func5202(stack5, config, this._keySerializers, this._additionalSerializers, this._modifiers);
_serializerFactory=Func5199(stack5, config, this._keySerializers, this._additionalSerializers, this._modifiers, stack4);
_cache=Func5163(src._cache, stack3);
_config=Func5161(src._config, stack4);
_featureFlags=Func5160(src._featureFlags, stack5);
_view=Func5159(src._view, stack6);
_parser=Func5158(stack7, src._parser);
_injectableValues=Func5157(src._injectableValues, stack8);
_attributes=Func5156(src._attributes, stack9);
_additionalDeserializers=Func5145(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators);
_additionalKeyDeserializers=Func5144(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators);
_modifiers=Func5143(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators);
_abstractTypeResolvers=Func5142(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators);
_valueInstantiators=Func5141();
_factoryConfig=Func5137(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators, stack5);
_cache=Func5132(src._cache, stack3);
_factory=Func5131();
_config=Func5130(src._config, stack4);
_featureFlags=Func5129(src._featureFlags, stack5);
_view=Func5128(src._view, stack6);
_parser=Func5127(stack7, src._parser);
_injectableValues=Func5126(src._injectableValues, stack8);
_attributes=Func5125(src._attributes, stack9);
_deserializationContext=Func5124();
com.fasterxml.jackson.databind.ObjectMapper#registerModule(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;=Func5123(this);
Line 219 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JodaModule());
_keyDeserializers=Func5120();
Line 219 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JodaModule());
com.fasterxml.jackson.databind.module.SimpleModule#getTypeId()Ljava/lang/Object;=Func5108(this._mask, this, this._mapperFeatures);
$stack15=Func5106(typeId, stack15, this._registeredModuleTypes);
Line 741 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
Line 742 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
Line 745 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func5105();
Line 746 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
_additionalSerializers=Func5085(this._additionalSerializers);
_additionalKeySerializers=Func5084(this._modifiers, this._additionalSerializers, this._additionalKeySerializers);
_modifiers=Func5083(this._modifiers, this._additionalSerializers, this._additionalKeySerializers);
_factoryConfig=Func5074(stack5, this._factoryConfig, this._modifiers, this._additionalSerializers, this._additionalKeySerializers);
com.fasterxml.jackson.databind.ser.BasicSerializerFactory#withAdditionalSerializers(Lcom/fasterxml/jackson/databind/ser/Serializers;)Lcom/fasterxml/jackson/databind/ser/SerializerFactory;=Func5070(stack5, this._factoryConfig, this._modifiers, this._additionalSerializers, this._additionalKeySerializers, stack4);
_serializerFactory=Func5069(stack5);
_cache=Func5028(src._cache, stack3);
_config=Func5026(src._config, stack4);
_featureFlags=Func5025(src._featureFlags, stack5);
_view=Func5024(src._view, stack6);
_parser=Func5023(stack7, src._parser);
_injectableValues=Func5022(src._injectableValues, stack8);
_attributes=Func5021(src._attributes, stack9);
_additionalKeyDeserializers=Func4999(this._keyDeserializers, this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers);
_modifiers=Func4998(this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, this._keyDeserializers);
_abstractTypeResolvers=Func4997(this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, this._keyDeserializers);
_valueInstantiators=Func4996(this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, this._keyDeserializers);
_factoryConfig=Func4988(stack5, this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, this._keyDeserializers, this._factoryConfig);
_cache=Func4979(src._cache, stack3);
_factory=Func4978(stack3, stack2, this._factoryConfig, this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, stack4._factory, stack3._deserializationContext, stack7._deserializationContext, this._keyDeserializers, stack5);
_config=Func4977(src._config, stack4);
_featureFlags=Func4976(src._featureFlags, stack5);
_view=Func4975(src._view, stack6);
_parser=Func4974(src._parser, stack7);
_injectableValues=Func4973(src._injectableValues, stack8);
_attributes=Func4972(src._attributes, stack9);
_deserializationContext=Func4970(stack2, stack3, this._factoryConfig, this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, stack4._factory, stack3._deserializationContext, stack7._deserializationContext, this._keyDeserializers, stack5);
com.fasterxml.jackson.databind.ObjectMapper#registerModule(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;=Func4969(this);
Line 220 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new ThreeTenModule());
Line 220 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new ThreeTenModule());
$stack15=Func4955(typeId, this._registeredModuleTypes, stack15, this, this._mapperFeatures, this._mask);
Line 741 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
com.fasterxml.jackson.databind.module.SimpleModule#getModuleName()Ljava/lang/String;=Func4954();
Line 742 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
Line 745 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func4953();
Line 746 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
_factoryConfig=Func4840(this._modifiers, this._additionalSerializers, this._additionalKeySerializers, this._factoryConfig);
_serializerFactory=Func4837(stack4, this._modifiers, this._additionalSerializers, this._additionalKeySerializers, this._factoryConfig);
_factoryConfig=Func4767(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._valueInstantiators, this._modifiers, this._factoryConfig);
_cache=Func4758(src._cache, stack3);
_factory=Func4757(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._valueInstantiators, this._modifiers, this._factoryConfig, stack3, stack4._factory, stack3._deserializationContext, stack4, src._config, src._cache, stack7._deserializationContext, stack9, src._attributes, stack8, src._injectableValues, stack7, src._parser, stack6, src._view);
_deserializationContext=Func4749(stack9, src._attributes, this._abstractTypeResolvers, this._additionalKeyDeserializers, this._valueInstantiators, this._modifiers, this._factoryConfig, stack3, stack4._factory, stack3._deserializationContext, stack4, src._config, src._cache, stack7._deserializationContext, stack8, src._injectableValues, stack7, src._parser, stack6, src._view, stack2);
Line 221 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> cache = root.child('/JsonCacheTest');
Line 221 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> cache = root.child('/JsonCacheTest');
Line 222 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> reload();
Line 209 org.openapitools.codegen.utils.JsonCacheTest:reload ---> root.unload();
Line 210 org.openapitools.codegen.utils.JsonCacheTest:reload ---> root.load(new ByteArrayInputStream(JSON.getBytes('UTF-8')));
$stack9=Func4747();
$stack2=Func4746(this);
Line 4034 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> final JavaType valueType = JSON_NODE_TYPE;
$stack16=Func4741(p0);
Line 4051 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> DeserializationContext ctxt = createDeserializationContext(p, cfg);
_factory=Func4733(src._factory);
_config=Func4732();
_featureFlags=Func4729();
com.fasterxml.jackson.databind.ObjectMapper#createDeserializationContext(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationConfig;)Lcom/fasterxml/jackson/databind/deser/DefaultDeserializationContext;=Func4717(this._view, stack4, p, this._deserializationContext, src._cache, jp, this._attributes);
Func4697(this._incompleteDeserializers);
deser=Func4695(src._cache, type, this._factory, valueType, this);
Func4481();
com.fasterxml.jackson.databind.DeserializationContext#getConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func4474(this._config);
Line 291 com.fasterxml.jackson.databind.JavaType:isEnumType ---> public final boolean isEnumType() { return _class.isEnum(); }
_current=Func4408(this._class, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Func4375();
resultType=Func4362(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, u0, this._class);
$stack13=Func4361(rawType);
$stack14=Func4360(rawType);
$stack5=Func4359(bindings, raw);
asStatic=Func4358(cls, this, bindings);
_class=Func4357(raw);
$stack5=Func4356(bindings, raw);
_class=Func4353(raw);
_superInterfaces=Func4352();
Func4337(cls, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
com.fasterxml.jackson.databind.type.ClassStack#child(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/type/ClassStack;=Func4323(cls, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
$stack13=Func4322(cls, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
$stack14=Func4321(rawType);
superClass=Func4320();
types=Func4318(rawType);
com.fasterxml.jackson.databind.util.ClassUtil#getGenericInterfaces(Ljava/lang/Class;)[Ljava/lang/reflect/Type;=Func4317(cls);
$stack5=Func4316(superClass, bindings, superInterfaces, raw);
asStatic=Func4315(superClass, bindings, this, superInts, cls);
_class=Func4313(raw);
rawType=Func4306(types, this, bindings, context);
com.fasterxml.jackson.databind.type.TypeFactory#_fromClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func4268(parentBindings, this, context, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
com.fasterxml.jackson.databind.type.TypeBindings#create(Ljava/lang/Class;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func4245(erasedType, stack18, rawBase);
Func4243();
$stack13=Func4238(rawType);
$stack14=Func4237(rawType);
superClass=Func4236();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func4233();
$stack5=Func4232(superInterfaces, bindings, raw, superClass);
asStatic=Func4230(cls, bindings, this, superInts, superClass);
_class=Func4229(raw);
$stack5=Func4228(raw, bindings);
_class=Func4225(raw);
_superClass=Func4224();
_superInterfaces=Func4223();
com.fasterxml.jackson.databind.type.TypeFactory#_fromAny(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/reflect/Type;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func4222(resultType);
Func4214(com.fasterxml.jackson.databind.DeserializationFeature.UNWRAP_ROOT_VALUE, this._mask);
Line 4057 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> result = deser.deserialize(p, ctxt);
Line 66 com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer:deserialize ---> switch (p.getCurrentTokenId()) {
_value=Func4188();
_value=Func4185();
_value=Func4182();
_value=Func4154();
_children=Func4060();
_value=Func4026(this._nodeFactory);
_value=Func4009(this._nodeFactory);
_value=Func4001(nodeFactory, p, ctxt);
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func3999(p, ctxt, nodeFactory);
$stack2=Func3994(this._children);
$stack2=Func3988(stack2, this._children);
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func3986(p, ctxt, nodeFactory);
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func3983();
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;=Func3981(node);
Line 4064 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> return (JsonNode) result;
Line 4064 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> return (JsonNode) result;
root=Func3979(stack4);
Line 211 org.openapitools.codegen.utils.JsonCacheTest:reload ---> }
Line 223 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> }
Line 906 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertEquals(TEST_OBJECT_0, cache.getObject('/testObjects/0', TEST_OBJECT_1),
$stack10=Func3977();
$stack3=Func3976();
resultType=Func3975(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
Func3972(bindings);
$stack52=Func3971(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func3970();
$stack5=Func3969(bindings, superInterfaces, raw);
_bindings=Func3966(bindings);
_superClass=Func3965();
com.fasterxml.jackson.databind.type.TypeFactory#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func3964();
Line 3706 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> if (fromValue != null) {
Line 3711 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> Class<?> targetType = toValueType.getRawClass();
com.fasterxml.jackson.databind.JavaType#getRawClass()Ljava/lang/Class;=Func3962();
Line 3712 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> if (targetType != Object.class
Line 3713 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> && !toValueType.hasGenericTypes()
this.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>=Func3955();
_objectCodec=Func3954(codec);
_writeContext=Func3952();
TOKEN_TYPES_BY_INDEX=Func3950();
_last=Func3946(this);
_appendAt=Func3945();
_hasNativeTypeIds=Func3944();
_hasNativeObjectIds=Func3943();
buf=Func3941(stack11, this, this._hasNativeTypeIds, this._hasNativeObjectIds);
_serializerFactory=Func3916(this._serFeatures, this._serializationConfig, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._serializerFactory);
_config=Func3915(this._serFeatures, this._serializationConfig, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE);
_serializerCache=Func3914();
Func3875();
cls=Func3874();
Func3819(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
Func3745(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
com.fasterxml.jackson.databind.type.ClassStack#child(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/type/ClassStack;=Func3723(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
$stack13=Func3722(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
$stack14=Func3721(rawType);
Func3710(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, cls, context);
com.fasterxml.jackson.databind.type.ClassStack#child(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/type/ClassStack;=Func3696(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, cls, context);
$stack13=Func3695(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, cls, context);
$stack14=Func3694(rawType);
Func3692();
type=Func3682(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, context, this);
$stack52=Func3679(type, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
Func3678();
key=Func3677(rawType);
com.fasterxml.jackson.databind.type.TypeFactory#_fromWellKnownInterface(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;=Func3675();
$stack5=Func3674(bindings, raw);
_class=Func3671(raw);
_superClass=Func3670();
_superInterfaces=Func3669();
type=Func3659(cls);
$stack52=Func3656(type, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
$stack13=Func3655(rawType);
superClass=Func3654();
$stack5=Func3653(bindings, raw);
_class=Func3651(raw);
$stack5=Func3650(bindings, raw);
_class=Func3647(raw);
_superClass=Func3646();
_superInterfaces=Func3645();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func3640();
$stack5=Func3639(raw, superClass, superInterfaces, bindings);
_class=Func3636(raw);
_bindings=Func3635(bindings);
_superClass=Func3634(superClass);
com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()Lcom/fasterxml/jackson/databind/type/TypeFactory;=Func3628();
resultType=Func3624(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this, type);
_classInfo=Func3325(this._config, this._bindings, this._superInterfaces, this._superClass, this._class);
$stack12=Func3267(this._serializerFactory, this._config, cls);
com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()Lcom/fasterxml/jackson/databind/type/TypeFactory;=Func3263();
resultType=Func3259(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
Func3182(this._mask, this._serFeatures, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._config);
$stack4=Func3179(l3, l1, l2);
Line 697 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> _append(JsonToken.START_OBJECT);
Line 1135 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 1137 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type);
_tokenTypes=Func3173(tokenType);
_appendAt=Func3170(this._appendAt);
Line 698 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> JsonWriteContext ctxt = _writeContext.createChildObjectContext();
_writeContext=Func3169(ctxt);
com.fasterxml.jackson.databind.node.ObjectNode.serialize.296:39=Func3168(this._children);
value=Func3167(en);
$stack13=Func3165(en, g);
$stack2=Func3164(name, this._writeContext);
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
_tokenTypes=Func3158(tokenType, index, this._tokenTypes);
_appendAt=Func3155(this._appendAt);
$stack2=Func3152(this._value);
Line 1168 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
Line 1170 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type);
_tokenTypes=Func3146(this._tokenTypes, index, tokenType);
_appendAt=Func3143(this._appendAt);
en=Func3142(stack7, stack8, stack10, this._children, l4);
value=Func3141(en);
$stack13=Func3139(en, g);
$stack2=Func3138(this._writeContext, name);
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
typeCode=Func3133(index, tokenType);
_tokenTypes=Func3132(typeCode, this._tokenTypes);
_appendAt=Func3129(this._appendAt);
$stack2=Func3126(this._value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
typeCode=Func3121(index, tokenType);
_tokenTypes=Func3120(stack8, stack9, typeCode, this._tokenTypes);
_appendAt=Func3117(this._appendAt);
en=Func3116(stack7, stack8, l4, stack10, this._children);
value=Func3115(en);
$stack13=Func3113(g, en);
$stack2=Func3112(this._writeContext, name);
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
typeCode=Func3107(tokenType, index);
_tokenTypes=Func3106(typeCode, this._tokenTypes, stack8, stack9);
_appendAt=Func3103(this._appendAt);
$stack2=Func3100(this._value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
typeCode=Func3095(tokenType, index);
_tokenTypes=Func3094(typeCode, this._tokenTypes, stack8, stack9);
_appendAt=Func3091(this._appendAt);
en=Func3090(l4, stack10, stack7, stack8, this._children);
value=Func3089(en);
$stack13=Func3087(en, g);
$stack2=Func3086(this._writeContext, name);
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
typeCode=Func3081(tokenType, index);
_tokenTypes=Func3080(this._tokenTypes, stack8, typeCode, stack9);
_appendAt=Func3077(this._appendAt);
$stack2=Func3074(this._value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
typeCode=Func3069(tokenType, index);
_tokenTypes=Func3068(stack8, stack9, typeCode, this._tokenTypes);
_appendAt=Func3065(this._appendAt);
en=Func3064(l4, stack10, stack7, stack8, this._children);
value=Func3063(en);
$stack13=Func3061(g, en);
$stack2=Func3060(this._writeContext, name);
typeCode=Func3029(index, tokenType);
_tokenTypes=Func3028(stack8, stack9, typeCode, this._tokenTypes);
_appendAt=Func3025(this._appendAt);
$stack3=Func3022(this._value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
typeCode=Func3017(tokenType, index);
_tokenTypes=Func3016(stack8, stack9, typeCode, this._tokenTypes);
_appendAt=Func3013(this._appendAt);
en=Func3012(l4, stack10, stack7, stack8, this._children);
value=Func3011(en);
$stack13=Func3009(g, en);
$stack2=Func3008(this._writeContext, name);
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
typeCode=Func3003(tokenType, index);
_tokenTypes=Func3002(stack8, stack9, typeCode, this._tokenTypes);
_appendAt=Func2999(this._appendAt);
$stack4=Func2996(this._value);
$stack2=Func2994(text);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
_tokenTypes=Func2988(stack8, stack9, typeCode, this._tokenTypes, tokenType, index);
_appendAt=Func2985(this._appendAt);
$stack10=Func2984(l4, stack10, stack7, stack8, this._children);
Line 708 com.fasterxml.jackson.databind.util.TokenBuffer:writeEndObject ---> _append(JsonToken.END_OBJECT);
Line 1135 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 1137 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type);
_cache=Func2928(src._cache);
_factory=Func2927(src._factory);
_config=Func2926();
Func2891(this._incompleteDeserializers);
_type=Func2820(type);
_classAnnotations=Func2816();
_bindings=Func2815(this._bindings);
_annotationIntrospector=Func2814(this._bindings);
_mixInResolver=Func2813(this._bindings);
_typeFactory=Func2812();
_config=Func2805();
_forSerialization=Func2799();
_classDef=Func2797(type, this._bindings, stack4);
_annotationIntrospector=Func2778();
_type=Func2739(type);
_propCollector=Func2738(this._mapperFeatures, this._mask, stack6, type, this._bindings, stack4);
_annotationIntrospector=Func2724();
_classInfo=Func2723(this._classDef);
Func2682();
Func2678();
Line 291 com.fasterxml.jackson.databind.JavaType:isEnumType ---> public final boolean isEnumType() { return _class.isEnum(); }
Func2673();
$stack14=Func2668(type);
com.fasterxml.jackson.databind.DeserializationContext#getConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func2665(this._config);
Line 96 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func2662();
Line 97 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> if (custom != null) {
Func2659();
Func2656();
Line 125 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);
rawType=Func2654(type);
com.fasterxml.jackson.databind.JavaType#getRawClass()Ljava/lang/Class;=Func2653();
Line 1787 com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:findDefaultDeserializer ---> if (rawType == CLASS_OBJECT) {
Line 318 com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:_findStdValueInstantiator ---> return null;
_simpleName=Func2410();
_annotationIntrospector=Func2402(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2400(stack3);
_forSerialization=Func2399(this._config, this._forSerialization, this._annotationIntrospector);
_simpleName=Func2346();
_name=Func2336(stack3);
_forSerialization=Func2335(this._config, this._forSerialization, this._annotationIntrospector);
_simpleName=Func2283();
_name=Func2273(stack3);
_forSerialization=Func2272(this._config, this._forSerialization, this._annotationIntrospector);
_simpleName=Func2222();
_name=Func2212(stack3);
_forSerialization=Func2211(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2158();
_forSerialization=Func2157(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2104();
_forSerialization=Func2103(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2050();
_forSerialization=Func2049(this._config, this._forSerialization, this._annotationIntrospector);
_typeContext=Func1825();
_annotations=Func1824();
_field=Func1823();
value=Func1814(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack2);
_typeContext=Func1788();
_field=Func1786();
value=Func1777(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_typeContext=Func1751();
_field=Func1749();
value=Func1740(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_typeContext=Func1714();
_field=Func1712();
value=Func1703(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_typeContext=Func1677();
_field=Func1675();
value=Func1666(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack2);
_typeContext=Func1640();
_field=Func1638();
value=Func1629(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_typeContext=Func1603();
_field=Func1601();
value=Func1592(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_fields=Func1559(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack3, stack2);
_setters=Func1551();
_fields=Func1542(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack2, stack3);
_setters=Func1534();
_fields=Func1521(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack3);
_setters=Func1513();
_ctorParameters=Func1509();
_fields=Func1500(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack3);
_setters=Func1492();
_fields=Func1483(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack3, stack2);
_fields=Func1474(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack2, stack3);
_ctorParameters=Func1462();
_fields=Func1453(stack3, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack2);
$stack3=Func1448();
_beanDesc=Func1447();
_config=Func1444(this._config);
_ignoreAllUnknown=Func1426();
ignored=Func1424();
Func1422();
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addBeanProps.486:185=Func1419();
result=Func1412();
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.filterBeanProps.621:36=Func1411(propDefsIn);
property=Func1410(stack18, propDefsIn, l8);
Func1389(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this._bindings, this._typeFactory, this._field, this._typeContext);
$stack13=Func1377(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this._bindings, this._typeFactory, this._field, this._typeContext);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func1371();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func1367();
$stack5=Func1366(bindings, raw, superClass, superInterfaces);
_class=Func1363(raw);
_typeHandler=Func1362();
_bindings=Func1361(bindings);
property=Func1360(stack18, propDefsIn, l8);
$stack3=Func1347(this._typeContext, this._field, this._bindings, this._typeFactory);
$stack52=Func1344(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this, this._typeContext, this._field);
Func1339(bindings);
key=Func1338(rawType);
com.fasterxml.jackson.databind.util.LRUMap#get(Ljava/lang/Object;)Ljava/lang/Object;=Func1336(key);
$stack13=Func1326(rawType);
$stack14=Func1325(rawType);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func1320();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func1316();
$stack5=Func1314(superClass, superInterfaces, bindings, raw);
Func1313(superInts, superClass, this, bindings, cls);
hash=Func1312(superInts, superClass, this, bindings, cls);
_typeHandler=Func1306();
com.fasterxml.jackson.databind.type.TypeFactory#_newSimpleType(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;=Func1301(stack5, raw, this, superInts, bindings, superClass);
Func1276(this._field, this._typeContext, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this._bindings, this._typeFactory);
$stack13=Func1263(this._field, this._typeContext, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this._bindings, this._typeFactory);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func1257();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func1252();
$stack5=Func1251(bindings, raw, superClass, superInterfaces);
MISSING_VALUE_DESERIALIZER=Func1172();
_type=Func589();
_valueDeserializer=Func588(com.fasterxml.jackson.databind.deser.SettableBeanProperty.MISSING_VALUE_DESERIALIZER);
$stack14=Func262(this._incompleteDeserializers);
$stack14=Func259(this._properties, this._simpleName, this._config, this._mapperFeatures);
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#iterator()Ljava/util/Iterator;=Func255(this._properties, this._simpleName);
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve.468:96=Func254(end#15);
Func230(this._incompleteDeserializers);
Func180();
Line 291 com.fasterxml.jackson.databind.JavaType:isEnumType ---> public final boolean isEnumType() { return _class.isEnum(); }
$stack14=Func168();
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func166();
Line 97 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> if (custom != null) {
Func158();
Line 125 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#findStdDeserializer(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func157();
Line 127 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> return deser;
Func125(this._incompleteDeserializers);
Func73();
Func71();
Line 291 com.fasterxml.jackson.databind.JavaType:isEnumType ---> public final boolean isEnumType() { return _class.isEnum(); }
Func66();
$stack14=Func61(type);
com.fasterxml.jackson.databind.DeserializationContext#getConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func58(this._config);
Line 96 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);
Line 906 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertEquals(TEST_OBJECT_0, cache.getObject('/testObjects/0', TEST_OBJECT_1),
Line 910 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertSame(TEST_OBJECT_1, cache.getObject('/testObjects/2', TEST_OBJECT_1),
$stack2=Func30(stack2, this._children);
$stack3=Func29();
index=Func17(this._children, ptr);
Line 109 com.fasterxml.jackson.databind.node.ArrayNode:get ---> if (index >= 0 && index < _children.size()) {
com.fasterxml.jackson.databind.node.POJONode#getPojo()Ljava/lang/Object;=Func7();
result=Func6(node, stack14);
com.fasterxml.jackson.databind.type.TypeFactory#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func3();
Line 3706 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> if (fromValue != null) {
Line 3712 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> if (targetType != Object.class
Line 3713 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> && !toValueType.hasGenericTypes()
Line 914 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertSame(TEST_OBJECT_1, cache.getObject('/testObjects/2', TestObject.class),
Line 916 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> }
