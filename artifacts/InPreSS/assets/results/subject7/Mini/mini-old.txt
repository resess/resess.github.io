Line 3713 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> && !toValueType.hasGenericTypes()
Line 3712 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> if (targetType != Object.class
Line 3706 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> if (fromValue != null) {
com.fasterxml.jackson.databind.type.TypeFactory#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func3(stack3);
Line 1260 com.fasterxml.jackson.databind.type.TypeFactory:_fromAny ---> return resultType;
result=Func6(node, stack14);
com.fasterxml.jackson.databind.node.POJONode#getPojo()Ljava/lang/Object;=Func7();
Line 109 com.fasterxml.jackson.databind.node.ArrayNode:get ---> if (index >= 0 && index < _children.size()) {
index=Func17(this._children, ptr);
$stack3=Func29();
Line 914 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertSame(TEST_OBJECT_1, cache.getObject('/testObjects/2', TestObject.class),
$stack2=Func30(stack2, this._children);
Line 96 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);
com.fasterxml.jackson.databind.DeserializationContext#getConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func58(this._config);
$stack14=Func61(type);
Func66();
Line 291 com.fasterxml.jackson.databind.JavaType:isEnumType ---> public final boolean isEnumType() { return _class.isEnum(); }
Func71();
Func73();
Func125(this._incompleteDeserializers);
Line 127 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> return deser;
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#findStdDeserializer(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func157();
Line 125 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);
Func158();
Line 97 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> if (custom != null) {
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func166();
$stack14=Func168();
Line 291 com.fasterxml.jackson.databind.JavaType:isEnumType ---> public final boolean isEnumType() { return _class.isEnum(); }
Func180();
Func230(this._incompleteDeserializers);
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve.468:96=Func254(end#15);
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#iterator()Ljava/util/Iterator;=Func255(this._properties, this._simpleName);
$stack14=Func259(this._properties, this._simpleName, this._config, this._mapperFeatures);
$stack14=Func262(this._incompleteDeserializers);
_valueDeserializer=Func588(com.fasterxml.jackson.databind.deser.SettableBeanProperty.MISSING_VALUE_DESERIALIZER);
_type=Func589();
MISSING_VALUE_DESERIALIZER=Func1172();
$stack5=Func1251(bindings, raw, superClass, superInterfaces);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func1252();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func1257();
$stack13=Func1263(this._field, this._typeContext, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this._bindings, this._typeFactory);
Func1276(this._field, this._typeContext, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this._bindings, this._typeFactory);
com.fasterxml.jackson.databind.type.TypeFactory#_newSimpleType(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;=Func1301(stack5, raw, this, superInts, bindings, superClass);
_typeHandler=Func1306();
hash=Func1312(superInts, superClass, this, bindings, cls);
Func1313(superInts, superClass, this, bindings, cls);
$stack5=Func1314(superClass, superInterfaces, bindings, raw);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func1316();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func1320();
$stack14=Func1325(rawType);
$stack13=Func1326(rawType);
com.fasterxml.jackson.databind.util.LRUMap#get(Ljava/lang/Object;)Ljava/lang/Object;=Func1336(key);
key=Func1338(rawType);
Func1339(bindings);
$stack52=Func1344(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this, this._typeContext, this._field);
$stack3=Func1347(this._typeContext, this._field, this._bindings, this._typeFactory);
property=Func1360(stack18, l8, propDefsIn);
_bindings=Func1361(bindings);
_typeHandler=Func1362();
_class=Func1363(raw);
$stack5=Func1366(bindings, raw, superClass, superInterfaces);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func1367();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func1371();
$stack13=Func1377(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this._bindings, this._typeFactory, this._field, this._typeContext);
Func1389(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this._bindings, this._typeFactory, this._field, this._typeContext);
property=Func1410(stack18, propDefsIn, l8);
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.filterBeanProps.621:36=Func1411(propDefsIn);
result=Func1412();
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addBeanProps.486:185=Func1419();
Func1422();
ignored=Func1424();
_ignoreAllUnknown=Func1426();
_config=Func1444(this._config);
_beanDesc=Func1447();
$stack3=Func1448();
_fields=Func1453(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack3, stack2);
_ctorParameters=Func1462();
_fields=Func1474(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack2, stack3);
_fields=Func1483(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack3, stack2);
_setters=Func1492();
_fields=Func1500(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack3);
_ctorParameters=Func1509();
_setters=Func1513();
_fields=Func1521(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack3);
_setters=Func1534();
_fields=Func1542(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack2, stack3);
_setters=Func1551();
_fields=Func1559(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack3, stack2);
value=Func1592(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_field=Func1601();
_typeContext=Func1603();
value=Func1629(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_field=Func1638();
_typeContext=Func1640();
value=Func1666(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack2);
_field=Func1675();
_typeContext=Func1677();
value=Func1703(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_field=Func1712();
_typeContext=Func1714();
value=Func1740(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_field=Func1749();
_typeContext=Func1751();
value=Func1777(stack2, this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory);
_field=Func1786();
_typeContext=Func1788();
value=Func1814(this._classDef, this._annotationIntrospector, this._type, this._mixInResolver, this._typeFactory, stack2);
_field=Func1823();
_annotations=Func1824();
_typeContext=Func1825();
_forSerialization=Func2049(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2050();
_forSerialization=Func2103(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2104();
_forSerialization=Func2157(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2158();
_forSerialization=Func2211(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2212(stack3);
_simpleName=Func2222();
_forSerialization=Func2272(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2273(stack3);
_simpleName=Func2283();
_forSerialization=Func2335(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2336(stack3);
_simpleName=Func2346();
_forSerialization=Func2399(this._config, this._forSerialization, this._annotationIntrospector);
_name=Func2400(stack3);
_annotationIntrospector=Func2402(this._config, this._forSerialization, this._annotationIntrospector);
_simpleName=Func2410();
Line 318 com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:_findStdValueInstantiator ---> return null;
Line 1787 com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:findDefaultDeserializer ---> if (rawType == CLASS_OBJECT) {
com.fasterxml.jackson.databind.JavaType#getRawClass()Ljava/lang/Class;=Func2653();
rawType=Func2654(type);
Line 125 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);
Func2656();
Func2659();
Line 97 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> if (custom != null) {
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func2662();
Line 96 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);
com.fasterxml.jackson.databind.DeserializationContext#getConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func2665(this._config);
$stack14=Func2668(type);
Func2673();
Line 291 com.fasterxml.jackson.databind.JavaType:isEnumType ---> public final boolean isEnumType() { return _class.isEnum(); }
Func2678();
Func2682();
_classInfo=Func2723(this._classDef);
_annotationIntrospector=Func2724();
_propCollector=Func2738(this._mapperFeatures, this._mask, stack6, type, this._bindings, stack4);
_type=Func2739(type);
_annotationIntrospector=Func2778();
_classDef=Func2797(type, this._bindings, stack4);
_forSerialization=Func2799();
_config=Func2805();
_typeFactory=Func2812();
_mixInResolver=Func2813(this._bindings);
_annotationIntrospector=Func2814(this._bindings);
_bindings=Func2815(this._bindings);
_classAnnotations=Func2816();
_type=Func2820(type);
Func2891(this._incompleteDeserializers);
_config=Func2926();
_factory=Func2927(src._factory);
_cache=Func2928(src._cache);
Line 1137 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type);
Line 1135 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 708 com.fasterxml.jackson.databind.util.TokenBuffer:writeEndObject ---> _append(JsonToken.END_OBJECT);
$stack10=Func2984(l4, stack10, stack7, stack8, this._children);
_appendAt=Func2985(this._appendAt);
_tokenTypes=Func2988(stack8, stack9, typeCode, this._tokenTypes, tokenType, index);
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
$stack2=Func2994(text);
$stack4=Func2996(this._value);
_appendAt=Func2999(this._appendAt);
_tokenTypes=Func3002(stack8, stack9, typeCode, this._tokenTypes);
typeCode=Func3003(tokenType, index);
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
$stack2=Func3008(this._writeContext, name);
$stack13=Func3009(g, en);
value=Func3011(en);
en=Func3012(l4, stack10, stack7, stack8, this._children);
_appendAt=Func3013(this._appendAt);
_tokenTypes=Func3016(stack8, stack9, typeCode, this._tokenTypes);
typeCode=Func3017(tokenType, index);
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
$stack3=Func3022(this._value);
_appendAt=Func3025(this._appendAt);
_tokenTypes=Func3028(stack8, stack9, typeCode, this._tokenTypes);
typeCode=Func3029(index, tokenType);
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
$stack2=Func3034(this._writeContext, name);
$stack13=Func3035(en, g);
value=Func3037(en);
en=Func3038(l4, stack10, stack7, stack8, this._children);
_appendAt=Func3039(this._appendAt);
_tokenTypes=Func3042(stack8, stack9, typeCode, this._tokenTypes);
typeCode=Func3043(index, tokenType);
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
$stack3=Func3048(this._value);
_appendAt=Func3051(this._appendAt);
_tokenTypes=Func3054(stack8, stack9, typeCode, this._tokenTypes);
typeCode=Func3055(index, tokenType);
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
$stack2=Func3060(this._writeContext, name);
$stack13=Func3061(g, en);
value=Func3063(en);
en=Func3064(l4, stack10, stack7, stack8, this._children);
_appendAt=Func3065(this._appendAt);
_tokenTypes=Func3068(stack8, stack9, typeCode, this._tokenTypes);
typeCode=Func3069(tokenType, index);
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
$stack2=Func3074(this._value);
_appendAt=Func3077(this._appendAt);
_tokenTypes=Func3080(this._tokenTypes, stack8, typeCode, stack9);
typeCode=Func3081(tokenType, index);
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
$stack2=Func3086(this._writeContext, name);
$stack13=Func3087(en, g);
value=Func3089(en);
en=Func3090(l4, stack10, stack7, stack8, this._children);
_appendAt=Func3091(this._appendAt);
_tokenTypes=Func3094(typeCode, this._tokenTypes, stack8, stack9);
typeCode=Func3095(tokenType, index);
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
$stack2=Func3100(this._value);
_appendAt=Func3103(this._appendAt);
_tokenTypes=Func3106(typeCode, this._tokenTypes, stack8, stack9);
typeCode=Func3107(tokenType, index);
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
$stack2=Func3112(this._writeContext, name);
$stack13=Func3113(g, en);
value=Func3115(en);
en=Func3116(stack7, stack8, l4, stack10, this._children);
_appendAt=Func3117(this._appendAt);
_tokenTypes=Func3120(stack8, stack9, typeCode, this._tokenTypes);
typeCode=Func3121(index, tokenType);
Line 1190 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type, value);
Line 1188 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
$stack2=Func3126(this._value);
_appendAt=Func3129(this._appendAt);
_tokenTypes=Func3132(typeCode, this._tokenTypes);
typeCode=Func3133(index, tokenType);
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
$stack2=Func3138(this._writeContext, name);
$stack13=Func3139(en, g);
value=Func3141(en);
en=Func3142(stack7, stack8, stack10, this._children, l4);
_appendAt=Func3143(this._appendAt);
_tokenTypes=Func3146(this._tokenTypes, index, tokenType);
Line 1170 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> : _last.append(_appendAt, type);
Line 1168 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> Segment next = _hasNativeId
$stack2=Func3152(this._value);
_appendAt=Func3155(this._appendAt);
_tokenTypes=Func3158(tokenType, index, this._tokenTypes);
Line 1150 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type, value);
Line 1148 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _append(JsonToken.FIELD_NAME, name);
$stack2=Func3164(name, this._writeContext);
$stack13=Func3165(en, g);
value=Func3167(en);
com.fasterxml.jackson.databind.node.ObjectNode.serialize.296:39=Func3168(this._children);
_writeContext=Func3169(ctxt);
Line 698 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> JsonWriteContext ctxt = _writeContext.createChildObjectContext();
_appendAt=Func3170(this._appendAt);
_tokenTypes=Func3173(tokenType);
Line 1137 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> : _last.append(_appendAt, type);
Line 1135 com.fasterxml.jackson.databind.util.TokenBuffer:_append ---> Segment next = _hasNativeId
Line 697 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> _append(JsonToken.START_OBJECT);
$stack4=Func3179(l3, l1, l2);
Func3182(this._serFeatures, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._config, this._mask);
resultType=Func3259(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()Lcom/fasterxml/jackson/databind/type/TypeFactory;=Func3263();
$stack12=Func3267(this._serializerFactory, this._config, cls);
_classInfo=Func3325(this._config, this._bindings, this._superInterfaces, this._superClass, this._class);
resultType=Func3624(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this, type);
com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()Lcom/fasterxml/jackson/databind/type/TypeFactory;=Func3628();
_superClass=Func3634(superClass);
_bindings=Func3635(bindings);
_class=Func3636(raw);
$stack5=Func3639(raw, superClass, superInterfaces, bindings);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func3640();
_superInterfaces=Func3645();
_superClass=Func3646();
_class=Func3647(raw);
$stack5=Func3650(bindings, raw);
_class=Func3651(raw);
$stack5=Func3653(bindings, raw);
superClass=Func3654();
$stack13=Func3655(rawType);
$stack52=Func3656(type, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
type=Func3659(cls);
_superInterfaces=Func3669();
_superClass=Func3670();
_class=Func3671(raw);
$stack5=Func3674(bindings, raw);
com.fasterxml.jackson.databind.type.TypeFactory#_fromWellKnownInterface(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;=Func3675();
key=Func3677(rawType);
Func3678();
$stack52=Func3679(type, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
type=Func3682(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, context, this);
Func3692();
$stack14=Func3694(rawType);
$stack13=Func3695(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, cls, context);
com.fasterxml.jackson.databind.type.ClassStack#child(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/type/ClassStack;=Func3696(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, cls, context);
Func3710(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, cls, context);
$stack14=Func3721(rawType);
$stack13=Func3722(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
com.fasterxml.jackson.databind.type.ClassStack#child(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/type/ClassStack;=Func3723(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
Func3745(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
Func3819(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
cls=Func3874();
Func3875();
_serializerCache=Func3914();
_config=Func3915(this._serFeatures, this._serializationConfig, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE);
_serializerFactory=Func3916(this._serFeatures, this._serializationConfig, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._serializerFactory);
buf=Func3941(stack11, this, this._hasNativeTypeIds, this._hasNativeObjectIds);
_hasNativeObjectIds=Func3943();
_hasNativeTypeIds=Func3944();
_appendAt=Func3945();
_first=Func3946(this);
TOKEN_TYPES_BY_INDEX=Func3950();
_writeContext=Func3952();
_objectCodec=Func3954(codec);
this.<com.fasterxml.jackson.databind.util.TokenBuffer: boolean _hasNativeId>=Func3955();
Line 3713 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> && !toValueType.hasGenericTypes()
Line 3712 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> if (targetType != Object.class
com.fasterxml.jackson.databind.JavaType#getRawClass()Ljava/lang/Class;=Func3962();
Line 3711 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> Class<?> targetType = toValueType.getRawClass();
Line 3706 com.fasterxml.jackson.databind.ObjectMapper:_convert ---> if (fromValue != null) {
com.fasterxml.jackson.databind.type.TypeFactory#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func3964();
_superClass=Func3965();
_bindings=Func3966(bindings);
$stack5=Func3969(bindings, superInterfaces, raw);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func3970();
$stack52=Func3971(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Func3972(bindings);
resultType=Func3975(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
$stack3=Func3976();
$stack10=Func3977();
root=Func3979(stack4);
Line 4064 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> return (JsonNode) result;
Line 4064 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> return (JsonNode) result;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer#deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;=Func3981(node);
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func3983();
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func3986(ctxt, p, nodeFactory);
$stack2=Func3988(stack2, this._children);
$stack2=Func3994(this._children);
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func3999(ctxt, p, nodeFactory);
_value=Func4001(nodeFactory, ctxt, p);
_value=Func4009(this._nodeFactory);
_value=Func4026(this._nodeFactory);
_children=Func4060();
_value=Func4154();
_value=Func4182();
_value=Func4185();
_value=Func4188();
Line 66 com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer:deserialize ---> switch (p.getCurrentTokenId()) {
Line 4057 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> result = deser.deserialize(p, ctxt);
Func4214(com.fasterxml.jackson.databind.DeserializationFeature.UNWRAP_ROOT_VALUE, this._mask);
com.fasterxml.jackson.databind.type.TypeFactory#_fromAny(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/reflect/Type;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func4222(resultType);
_superInterfaces=Func4223();
_superClass=Func4224();
_class=Func4225(raw);
$stack5=Func4228(raw, bindings);
_class=Func4229(raw);
asStatic=Func4230(cls, this, bindings, superInts, superClass);
$stack5=Func4232(bindings, superInterfaces, raw, superClass);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func4233();
superClass=Func4236();
$stack14=Func4237(rawType);
$stack13=Func4238(rawType);
Func4243();
com.fasterxml.jackson.databind.type.TypeBindings#create(Ljava/lang/Class;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func4245(erasedType, stack18, rawBase);
com.fasterxml.jackson.databind.type.TypeFactory#_fromClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func4268(parentBindings, this, context, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
rawType=Func4306(types, this, context, bindings);
_class=Func4313(raw);
asStatic=Func4315(superClass, bindings, this, superInts, cls);
$stack5=Func4316(superClass, bindings, superInterfaces, raw);
com.fasterxml.jackson.databind.util.ClassUtil#getGenericInterfaces(Ljava/lang/Class;)[Ljava/lang/reflect/Type;=Func4317(cls);
types=Func4318(rawType);
superClass=Func4320();
$stack14=Func4321(rawType);
$stack13=Func4322(cls, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
com.fasterxml.jackson.databind.type.ClassStack#child(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/type/ClassStack;=Func4323(cls, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
Func4337(cls, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
_superInterfaces=Func4352();
_class=Func4353(raw);
$stack5=Func4356(bindings, raw);
_class=Func4357(raw);
asStatic=Func4358(cls, this, bindings);
$stack5=Func4359(bindings, raw);
$stack14=Func4360(rawType);
$stack13=Func4361(rawType);
resultType=Func4362(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, u0, this._class);
Func4375();
_current=Func4408(this._class, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Line 291 com.fasterxml.jackson.databind.JavaType:isEnumType ---> public final boolean isEnumType() { return _class.isEnum(); }
com.fasterxml.jackson.databind.DeserializationContext#getConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func4474(this._config);
Func4481();
deser=Func4695(src._cache, type, this._factory, valueType, this);
Func4697(this._incompleteDeserializers);
com.fasterxml.jackson.databind.ObjectMapper#createDeserializationContext(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationConfig;)Lcom/fasterxml/jackson/databind/deser/DefaultDeserializationContext;=Func4717(this._view, stack4, src._cache, p, this._deserializationContext, jp, this._attributes);
_featureFlags=Func4729();
_config=Func4732();
_factory=Func4733(src._factory);
Line 4051 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> DeserializationContext ctxt = createDeserializationContext(p, cfg);
$stack16=Func4741(p0);
Line 4034 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> final JavaType valueType = JSON_NODE_TYPE;
$stack2=Func4746(this);
$stack9=Func4747();
_deserializationContext=Func4749(stack9, src._attributes, this._abstractTypeResolvers, this._additionalKeyDeserializers, this._valueInstantiators, this._modifiers, this._factoryConfig, stack3, stack4._factory, stack3._deserializationContext, stack4, src._config, src._cache, stack7._deserializationContext, stack8, src._injectableValues, src._parser, stack7, stack6, src._view, stack2);
_factory=Func4757(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._valueInstantiators, this._modifiers, this._factoryConfig, stack3, stack4._factory, stack3._deserializationContext, stack4, src._config, src._cache, stack7._deserializationContext, stack9, src._attributes, stack8, src._injectableValues, src._parser, stack7, stack6, src._view);
_cache=Func4758(src._cache, stack3);
_factoryConfig=Func4767(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._valueInstantiators, this._modifiers, this._factoryConfig);
_serializerFactory=Func4837(stack4, this._modifiers, this._additionalSerializers, this._additionalKeySerializers, this._factoryConfig);
_factoryConfig=Func4840(this._modifiers, this._additionalSerializers, this._additionalKeySerializers, this._factoryConfig);
Line 746 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func4953();
Line 745 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
Line 742 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
com.fasterxml.jackson.databind.module.SimpleModule#getModuleName()Ljava/lang/String;=Func4954();
Line 741 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
$stack15=Func4955(typeId, this._registeredModuleTypes, stack15, this, this._mapperFeatures, this._mask);
Line 220 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new ThreeTenModule());
com.fasterxml.jackson.databind.ObjectMapper#registerModule(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;=Func4969(this);
_deserializationContext=Func4970(stack2, stack3, this._factoryConfig, this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, stack4._factory, stack3._deserializationContext, stack7._deserializationContext, this._keyDeserializers, stack5);
_attributes=Func4972(src._attributes, stack9);
_injectableValues=Func4973(src._injectableValues, stack8);
_parser=Func4974(src._parser, stack7);
_view=Func4975(src._view, stack6);
_featureFlags=Func4976(src._featureFlags, stack5);
_config=Func4977(src._config, stack4);
_factory=Func4978(stack3, stack2, this._factoryConfig, this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, stack4._factory, stack3._deserializationContext, stack7._deserializationContext, this._keyDeserializers, stack5);
_cache=Func4979(src._cache, stack3);
_factoryConfig=Func4988(stack5, this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, this._keyDeserializers, this._factoryConfig);
_valueInstantiators=Func4996(this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, this._keyDeserializers);
_abstractTypeResolvers=Func4997(this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, this._keyDeserializers);
_modifiers=Func4998(this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers, this._keyDeserializers);
_additionalKeyDeserializers=Func4999(this._keyDeserializers, this._valueInstantiators, this._additionalKeyDeserializers, this._abstractTypeResolvers, this._modifiers, this._additionalDeserializers);
_attributes=Func5021(src._attributes, stack9);
_injectableValues=Func5022(src._injectableValues, stack8);
_parser=Func5023(stack7, src._parser);
_view=Func5024(src._view, stack6);
_featureFlags=Func5025(src._featureFlags, stack5);
_config=Func5026(src._config, stack4);
_cache=Func5028(src._cache, stack3);
_serializerFactory=Func5069(stack5);
com.fasterxml.jackson.databind.ser.BasicSerializerFactory#withAdditionalSerializers(Lcom/fasterxml/jackson/databind/ser/Serializers;)Lcom/fasterxml/jackson/databind/ser/SerializerFactory;=Func5070(stack5, this._factoryConfig, this._modifiers, this._additionalSerializers, this._additionalKeySerializers, stack4);
_factoryConfig=Func5074(stack5, this._factoryConfig, this._modifiers, this._additionalSerializers, this._additionalKeySerializers);
_modifiers=Func5083(this._modifiers, this._additionalSerializers, this._additionalKeySerializers);
_additionalKeySerializers=Func5084(this._modifiers, this._additionalSerializers, this._additionalKeySerializers);
_additionalSerializers=Func5085(this._additionalSerializers);
Line 746 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func5105();
Line 745 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
Line 742 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
Line 741 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
$stack15=Func5106(typeId, stack15, this._registeredModuleTypes);
com.fasterxml.jackson.databind.module.SimpleModule#getTypeId()Ljava/lang/Object;=Func5108(this._mask, this, this._mapperFeatures);
Line 219 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JodaModule());
_keyDeserializers=Func5120();
com.fasterxml.jackson.databind.ObjectMapper#registerModule(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;=Func5123(this);
_deserializationContext=Func5124();
_attributes=Func5125(src._attributes, stack9);
_injectableValues=Func5126(src._injectableValues, stack8);
_parser=Func5127(stack7, src._parser);
_view=Func5128(src._view, stack6);
_featureFlags=Func5129(src._featureFlags, stack5);
_config=Func5130(src._config, stack4);
_factory=Func5131();
_cache=Func5132(src._cache, stack3);
_factoryConfig=Func5137(stack5, this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators);
_valueInstantiators=Func5141();
_abstractTypeResolvers=Func5142(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators);
_modifiers=Func5143(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators);
_additionalKeyDeserializers=Func5144(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators);
_additionalDeserializers=Func5145(this._abstractTypeResolvers, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators);
_attributes=Func5156(src._attributes, stack9);
_injectableValues=Func5157(src._injectableValues, stack8);
_parser=Func5158(stack7, src._parser);
_view=Func5159(src._view, stack6);
_featureFlags=Func5160(src._featureFlags, stack5);
_config=Func5161(src._config, stack4);
_cache=Func5163(src._cache, stack3);
_serializerFactory=Func5199(stack5, config, this._keySerializers, this._additionalSerializers, this._modifiers, stack4);
_factoryConfig=Func5202(stack5, config, this._keySerializers, this._additionalSerializers, this._modifiers);
_modifiers=Func5210(this._keySerializers, this._additionalSerializers, this._modifiers);
_additionalKeySerializers=Func5211(this._keySerializers);
_additionalSerializers=Func5212(this._keySerializers, this._additionalSerializers, this._modifiers);
_attributes=Func5226(src._attributes);
_injectableValues=Func5227(src._injectableValues);
_parser=Func5228();
_view=Func5229(src._view);
_featureFlags=Func5230(src._featureFlags);
_config=Func5231(src._config);
_cache=Func5233(src._cache);
Func5273(this, config);
$stack4=Func5274(config);
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#withAdditionalSerializers(Lcom/fasterxml/jackson/databind/ser/Serializers;)Lcom/fasterxml/jackson/databind/cfg/SerializerFactoryConfig;=Func5277(this._factoryConfig, this._additionalKeySerializers, this._modifiers, stack5);
_modifiers=Func5279(this._additionalKeySerializers, this._modifiers);
_additionalKeySerializers=Func5280(this._additionalKeySerializers, this._modifiers);
_additionalSerializers=Func5281();
Line 746 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
Line 742 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
com.fasterxml.jackson.databind.module.SimpleModule#getModuleName()Ljava/lang/String;=Func5296();
Line 741 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
$stack15=Func5297(typeId, this._registeredModuleTypes);
_registeredModuleTypes=Func5298();
com.fasterxml.jackson.databind.module.SimpleModule#getTypeId()Ljava/lang/Object;=Func5301(this._mapperFeatures, this._mask);
_keySerializers=Func5313();
_nodeFactory=Func5314(src._nodeFactory);
_configOverrides=Func5315(src._configOverrides);
_attributes=Func5316(src._attributes);
_view=Func5317(src._view);
_rootName=Func5318(src._rootName);
_mixIns=Func5319(src._mixIns);
_mapperFeatures=Func5320(this._mapperFeatures, this._parserFeaturesToChange, this._formatReadFeaturesToChange, this._parserFeatures, this._formatReadFeatures, this._mask, com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, this._deserFeatures);
_base=Func5321(src._base);
_serializationConfig=Func5329();
_serFeatures=Func5331(com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT, this._serFeatures, this._mask);
_configOverrides=Func5332();
_attributes=Func5333();
_view=Func5334();
_rootName=Func5335();
_mixIns=Func5336();
_mapperFeatures=Func5337(this._mapperFeatures, com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT, this._serFeatures, this._mask);
_base=Func5338();
_factoryConfig=Func5347();
_modifiers=Func5348(stack4);
_modifiers=Func5349();
_additionalKeySerializers=Func5350(stack6);
_additionalKeySerializers=Func5351();
_additionalSerializers=Func5352();
_deserializationContext=Func5354();
_attributes=Func5355();
_view=Func5356();
_injectableValues=Func5357();
_config=Func5358();
_featureFlags=Func5359();
_cache=Func5360(this, stack3);
_incompleteDeserializers=Func5362();
Line 42 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> final protected ConcurrentHashMap<JavaType, JsonDeserializer<Object>> _cachedDeserializers
Line 59 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> public DeserializerCache() { }
$stack3=Func5363();
Line 159 com.fasterxml.jackson.databind.DeserializationContext:<init> ---> _factory = df;
Line 156 com.fasterxml.jackson.databind.DeserializationContext:<init> ---> if (df == null) {
_valueInstantiators=Func5365(stack6);
_valueInstantiators=Func5366();
_abstractTypeResolvers=Func5367(stack8);
_abstractTypeResolvers=Func5368();
_modifiers=Func5369(stack11);
_modifiers=Func5370();
_additionalKeyDeserializers=Func5371(stack14);
_additionalKeyDeserializers=Func5372();
_additionalDeserializers=Func5373();
_deserializationConfig=Func5374(u7, this);
_formatReadFeaturesToChange=Func5375();
_formatReadFeatures=Func5376();
_parserFeaturesToChange=Func5377();
_parserFeatures=Func5378();
_problemHandlers=Func5379();
_nodeFactory=Func5380();
Line 104 com.fasterxml.jackson.databind.DeserializationConfig:<init> ---> _deserFeatures = collectFeatureDefaults(DeserializationFeature.class);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func5387(this._mask);
UNWRAP_ROOT_VALUE=Func5516(stack18);
_mask=Func5517();
FAIL_ON_UNKNOWN_PROPERTIES=Func5586(stack4);
_mask=Func5587();
USE_BIG_DECIMAL_FOR_FLOATS=Func5606(stack0);
_mask=Func5607();
Line 104 com.fasterxml.jackson.databind.DeserializationConfig:<init> ---> _deserFeatures = collectFeatureDefaults(DeserializationFeature.class);
_configOverrides=Func5613();
_attributes=Func5614();
_view=Func5619();
_rootName=Func5620();
_rootNames=Func5621();
_subtypeResolver=Func5622();
_mixIns=Func5623();
_mapperFeatures=Func5625(mapperFeatures);
_base=Func5626(base);
Func5627();
$stack6=Func5628(base, com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES);
Func5629(base);
_serializationConfig=Func5630();
Line 115 com.fasterxml.jackson.databind.SerializationConfig:<init> ---> _serFeatures = collectFeatureDefaults(SerializationFeature.class);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func5631();
INDENT_OUTPUT=Func5764(stack1);
_mask=Func5765();
WRAP_ROOT_VALUE=Func5769(stack0);
_mask=Func5770();
Line 115 com.fasterxml.jackson.databind.SerializationConfig:<init> ---> _serFeatures = collectFeatureDefaults(SerializationFeature.class);
_mapperFeatures=Func5776(base, com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES);
DEFAULT_MAPPER_FEATURES=Func5778(stack1);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func5779(flags);
Line 99 com.fasterxml.jackson.databind.cfg.MapperConfig:collectFeatureDefaults ---> for (F value : enumClass.getEnumConstants()) {
flags=Func5780(flags, stack12);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5781(this._mask);
flags=Func5786(flags, stack12);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5787(this._mask);
flags=Func5792(stack12);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5793(this._mask);
_mask=Func5798(this);
_defaultState=Func5799();
Line 491 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> IGNORE_MERGE_FOR_UNMERGEABLE(true)
_mask=Func5800(this);
_defaultState=Func5801();
Line 477 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> IGNORE_DUPLICATE_MODULE_REGISTRATIONS(true),
_mask=Func5802(this);
_defaultState=Func5803();
Line 452 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> ALLOW_COERCION_OF_SCALARS(true),
_mask=Func5804();
Line 424 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> ALLOW_EXPLICIT_PROPERTY_RENAMING(false),
_mask=Func5806();
Line 413 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> USE_STD_BEAN_NAMING(false),
com.fasterxml.jackson.databind.cfg.BaseSettings#withClassIntrospector(Lcom/fasterxml/jackson/databind/introspect/ClassIntrospector;)Lcom/fasterxml/jackson/databind/cfg/BaseSettings;=Func5808(stack3, this);
$stack3=Func5809();
asStatic=Func5812(this, cls);
Line 82 com.fasterxml.jackson.databind.type.SimpleType:constructUnsafe ---> return new SimpleType(raw, null,
Line 37 com.fasterxml.jackson.databind.introspect.BasicClassIntrospector:<clinit> ---> BOOLEAN_DESC = BasicBeanDescription.forOtherUse(null, SimpleType.constructUnsafe(Boolean.TYPE),
$stack14=Func5813(com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_BASE);
_mixIns=Func5814();
_typeFactory=Func5815();
_jsonFactory=Func5816();
Line 458 com.fasterxml.jackson.databind.ObjectMapper:<init> ---> final protected ConcurrentHashMap<JavaType, JsonDeserializer<Object>> _rootDeserializers
Line 541 com.fasterxml.jackson.databind.ObjectMapper:<init> ---> {
Line 304 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Base64Variants.getDefaultVariant() // 2.1
Line 302 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Locale.getDefault(),
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5820();
Line 94 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_COMPARABLE = new SimpleType(CLS_COMPARABLE);
_bindings=Func5822(bindings);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5825();
Line 86 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_OBJECT = new SimpleType(CLS_OBJECT);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5829();
asStatic=Func5830(this, cls, bindings);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5832();
Line 79 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_INT = new SimpleType(CLS_INT);
_superInterfaces=Func5834();
_bindings=Func5835(bindings);
asStatic=Func5837(bindings);
Func5838(stack2);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5839();
EMPTY_BINDINGS=Func5840(stack2);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5841();
Line 48 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static TypeBindings EMPTY_BINDINGS = TypeBindings.emptyBindings();
Line 300 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> null, TypeFactory.defaultInstance(),
Line 297 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> protected final static BaseSettings DEFAULT_BASE = new BaseSettings(
Line 287 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> SimpleType.constructUnsafe(JsonNode.class);
com.fasterxml.jackson.databind.type.SimpleType#constructUnsafe(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/type/SimpleType;=Func5842();
_bindings=Func5843(com.fasterxml.jackson.databind.type.TypeBase.NO_BINDINGS);
_class=Func5844();
NO_BINDINGS=Func5848(stack0);
Line 68 com.fasterxml.jackson.databind.type.TypeBindings:emptyBindings ---> return EMPTY;
Line 287 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> SimpleType.constructUnsafe(JsonNode.class);
