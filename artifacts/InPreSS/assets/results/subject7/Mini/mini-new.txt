Line 216 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> root = JsonCache.Factory.instance.create();
Line 216 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> root = JsonCache.Factory.instance.create();
Line 347 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> protected final static BaseSettings DEFAULT_BASE = new BaseSettings(
Line 350 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> null, TypeFactory.defaultInstance(),
EMPTY_BINDINGS=Func5836();
Line 67 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> private final static Class<?> CLS_JSON_NODE = JsonNode.class; // since 2.10
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5837();
NO_BINDINGS=Func5844(stack0);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5835();
this.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>=Func5834(stack2);
asStatic=Func5833(bindings);
asStatic=Func5826(bindings);
_bindings=Func5831(bindings);
_superInterfaces=Func5830();
CORE_TYPE_BOOL=Func13655(stack6);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5828();
_bindings=Func5818();
Line 120 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_JSON_NODE = new SimpleType(CLS_JSON_NODE);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func13653();
Func13652(stack2, this, cls);
asStatic=Func4358(this, bindings, cls);
asStatic=Func5811(this, bindings, cls);
Func13651(this);
_class=Func13650(raw);
_hash=Func13649(raw);
_valueHandler=Func13648();
_typeHandler=Func13647();
_asStatic=Func13646();
_bindings=Func13645(bindings);
_superClass=Func13644();
_superInterfaces=Func13643();
Line 120 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_JSON_NODE = new SimpleType(CLS_JSON_NODE);
Line 352 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Locale.getDefault(),
Line 354 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Base64Variants.getDefaultVariant(), // 2.1
Line 20 com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator:<clinit> ---> public final static LaissezFaireSubTypeValidator instance = new LaissezFaireSubTypeValidator();
Line 15 com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator:<init> ---> public final class LaissezFaireSubTypeValidator
Line 20 com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator:<clinit> ---> public final static LaissezFaireSubTypeValidator instance = new LaissezFaireSubTypeValidator();
Line 354 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Base64Variants.getDefaultVariant(), // 2.1
Line 161 com.fasterxml.jackson.databind.cfg.BaseSettings:<init> ---> _typeValidator = ptv;
Line 354 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Base64Variants.getDefaultVariant(), // 2.1
this.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>=Func5812(com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_BASE);
Func5808(this._typeValidator);
Line 161 com.fasterxml.jackson.databind.cfg.BaseSettings:<init> ---> _typeValidator = ptv;
com.fasterxml.jackson.databind.cfg.BaseSettings#withClassIntrospector(Lcom/fasterxml/jackson/databind/introspect/ClassIntrospector;)Lcom/fasterxml/jackson/databind/cfg/BaseSettings;=Func5807(this, stack3);
_mask=Func5805();
_mask=Func5803();
_defaultState=Func5802();
_mask=Func5801(this);
_defaultState=Func5800();
_mask=Func5799(this);
_defaultState=Func5798();
_mask=Func5797(this);
_defaultState=Func13641();
_mask=Func13640(this);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5786(this._mask);
flags=Func5785(stack12);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5780(this._mask);
flags=Func5779(stack12, flags);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func13632(stack12, flags, this._mask);
DEFAULT_MAPPER_FEATURES=Func5777(stack1);
Line 41 com.fasterxml.jackson.databind.SerializationConfig:<clinit> ---> private final static int SER_FEATURE_DEFAULTS = collectFeatureDefaults(SerializationFeature.class);
_mask=Func13626();
WRAP_ROOT_VALUE=Func13625(stack0);
_mask=Func13621();
INDENT_OUTPUT=Func13620(stack1);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func13486();
Line 41 com.fasterxml.jackson.databind.SerializationConfig:<clinit> ---> private final static int SER_FEATURE_DEFAULTS = collectFeatureDefaults(SerializationFeature.class);
_mapperFeatures=Func5775(base, com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES);
Line 119 com.fasterxml.jackson.databind.SerializationConfig:<init> ---> _serFeatures = SER_FEATURE_DEFAULTS;
Line 32 com.fasterxml.jackson.databind.DeserializationConfig:<clinit> ---> private final static int DESER_FEATURE_DEFAULTS = collectFeatureDefaults(DeserializationFeature.class);
_mask=Func13480();
USE_BIG_DECIMAL_FOR_FLOATS=Func13479(stack0);
_mask=Func13460();
FAIL_ON_UNKNOWN_PROPERTIES=Func13459(stack4);
_mask=Func13390();
UNWRAP_ROOT_VALUE=Func13389(stack18);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func13260(this._mask);
Line 32 com.fasterxml.jackson.databind.DeserializationConfig:<clinit> ---> private final static int DESER_FEATURE_DEFAULTS = collectFeatureDefaults(DeserializationFeature.class);
this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>=Func5374(base);
Func5628(base, com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES);
_base=Func13258(base);
_mapperFeatures=Func13257(mapperFeatures);
_mixIns=Func13256();
_rootName=Func13255();
_view=Func13254();
_attributes=Func13249();
_configOverrides=Func13248(configOverrides);
Line 107 com.fasterxml.jackson.databind.DeserializationConfig:<init> ---> _deserFeatures = DESER_FEATURE_DEFAULTS;
_nodeFactory=Func13241();
_parserFeatures=Func13240();
_parserFeaturesToChange=Func13239();
_formatReadFeatures=Func13238();
_formatReadFeaturesToChange=Func13237();
Line 55 com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:<clinit> ---> private final static Class<?> CLASS_SERIALIZABLE = Serializable.class;
_additionalDeserializers=Func5373();
_additionalKeyDeserializers=Func5372();
_additionalKeyDeserializers=Func13236(stack14);
_modifiers=Func5370();
_modifiers=Func13235(stack11);
_abstractTypeResolvers=Func5368();
_abstractTypeResolvers=Func13234(stack8);
_valueInstantiators=Func5366();
_valueInstantiators=Func13233(stack6);
Line 158 com.fasterxml.jackson.databind.DeserializationContext:<init> ---> _factory = Objects.requireNonNull(df, 'Cannot pass null DeserializerFactory');
$stack7=Func13231();
Line 54 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> this(2000); // see [databind#1995]
Line 57 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> public DeserializerCache(int maxSize) {
$stack9=Func13230();
Line 58 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> int initial = Math.min(64, maxSize>>2);
Line 59 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> _cachedDeserializers = new LRUMap<>(initial, maxSize);
_map=Func13229(initialEntries);
Line 59 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> _cachedDeserializers = new LRUMap<>(initial, maxSize);
_cache=Func13227(stack5, this);
_featureFlags=Func13226();
_config=Func13225();
_injectableValues=Func13224();
_view=Func13223();
_attributes=Func13222();
_deserializationContext=Func5354();
_additionalSerializers=Func5352();
_additionalKeySerializers=Func5351();
_additionalKeySerializers=Func13221(stack6);
_modifiers=Func5349();
_modifiers=Func13220(stack4);
_factoryConfig=Func5347();
_base=Func5338();
_mapperFeatures=Func5337(this._mapperFeatures, com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT, this._serFeatures, this._mask);
_mixIns=Func5336();
_rootName=Func5335();
_view=Func5334();
_attributes=Func5333();
_configOverrides=Func5332();
_serFeatures=Func5331(this._mask, com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT, this._serFeatures);
_serializationConfig=Func5329();
_base=Func5321(src._base);
_mapperFeatures=Func5320(this._parserFeatures, this._parserFeaturesToChange, this._formatReadFeaturesToChange, this._formatReadFeatures, this._deserFeatures, this._mask, com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, this._mapperFeatures);
_mixIns=Func5319(src._mixIns);
_rootName=Func5318(src._rootName);
_view=Func5317(src._view);
_attributes=Func5316(src._attributes);
_configOverrides=Func5315(src._configOverrides);
_nodeFactory=Func5314(src._nodeFactory);
Line 216 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> root = JsonCache.Factory.instance.create();
Line 217 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> ObjectMapper mapper = root.getMapper();
Line 218 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JavaTimeModule());
_keySerializers=Func13219();
Line 218 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JavaTimeModule());
Line 773 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> _assertNotNull('module', module);
Line 4412 com.fasterxml.jackson.databind.ObjectMapper:_assertNotNull ---> if (src == null) {
Line 777 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
com.fasterxml.jackson.databind.module.SimpleModule#getModuleName()Ljava/lang/String;=Func13218();
Line 778 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
Line 781 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func13217();
Line 782 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
com.fasterxml.jackson.databind.module.SimpleModule#getTypeId()Ljava/lang/Object;=Func13205(this);
_registeredModuleTypes=Func13202();
$stack5=Func13201(this._registeredModuleTypes, typeId#2);
_additionalSerializers=Func13187();
_additionalKeySerializers=Func13186(this._additionalKeySerializers, this._modifiers);
_modifiers=Func13185(this._additionalKeySerializers, this._modifiers);
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#withAdditionalSerializers(Lcom/fasterxml/jackson/databind/ser/Serializers;)Lcom/fasterxml/jackson/databind/cfg/SerializerFactoryConfig;=Func13183(stack5, this._factoryConfig, this._additionalKeySerializers, this._modifiers);
$stack9=Func13180(config);
$stack5=Func5273(config, this);
_cache=Func13140(src._cache);
_config=Func13138(src._config);
_featureFlags=Func13137(src._featureFlags);
_view=Func13136(src._view);
_parser=Func13135();
_injectableValues=Func13134(src._injectableValues);
_attributes=Func13133(src._attributes);
_additionalSerializers=Func13119(this._modifiers, this._additionalSerializers, this._keySerializers);
_additionalKeySerializers=Func13118(this._keySerializers);
_modifiers=Func13117(this._modifiers, this._additionalSerializers, this._keySerializers);
_factoryConfig=Func13109(this._modifiers, this._additionalSerializers, this._keySerializers, stack5, config);
_serializerFactory=Func13106(stack4, this._modifiers, this._additionalSerializers, this._keySerializers, stack5, config);
_cache=Func13070(stack3, src._cache);
_config=Func13068(stack4, src._config);
_featureFlags=Func13067(stack5, src._featureFlags);
_view=Func13066(stack6, src._view);
_parser=Func13065(stack7, src._parser);
_injectableValues=Func13064(src._injectableValues, stack8);
_attributes=Func13063(src._attributes, stack9);
_additionalDeserializers=Func13052(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers);
_additionalKeyDeserializers=Func13051(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers);
_modifiers=Func13050(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers);
_abstractTypeResolvers=Func13049(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers);
_valueInstantiators=Func13048();
_factoryConfig=Func13044(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers, stack5);
_cache=Func13039(stack3, src._cache);
_factory=Func13038();
_config=Func13037(src._config, stack4);
_featureFlags=Func13036(stack5, src._featureFlags);
_view=Func13035(src._view, stack6);
_parser=Func13034(stack7, src._parser);
_injectableValues=Func13033(src._injectableValues, stack8);
_attributes=Func13032(src._attributes, stack9);
_deserializationContext=Func13031();
com.fasterxml.jackson.databind.ObjectMapper#registerModule(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;=Func13030(this);
Line 219 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JodaModule());
_keyDeserializers=Func13027();
Line 219 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JodaModule());
Line 773 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> _assertNotNull('module', module);
Line 4412 com.fasterxml.jackson.databind.ObjectMapper:_assertNotNull ---> if (src == null) {
Line 777 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
Line 778 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
Line 781 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func13026();
Line 782 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
com.fasterxml.jackson.databind.module.SimpleModule#getTypeId()Ljava/lang/Object;=Func13014(this);
Func13012(typeId#2, this._registeredModuleTypes, stack19);
_additionalSerializers=Func12992(this._additionalSerializers);
_additionalKeySerializers=Func12991(this._additionalSerializers, this._additionalKeySerializers, this._modifiers);
_modifiers=Func12990(this._additionalSerializers, this._additionalKeySerializers, this._modifiers);
_factoryConfig=Func12981(stack5, this._additionalSerializers, this._additionalKeySerializers, this._modifiers, this._factoryConfig);
com.fasterxml.jackson.databind.ser.BasicSerializerFactory#withAdditionalSerializers(Lcom/fasterxml/jackson/databind/ser/Serializers;)Lcom/fasterxml/jackson/databind/ser/SerializerFactory;=Func12977(stack5, this._additionalSerializers, this._additionalKeySerializers, this._modifiers, this._factoryConfig, stack4);
_serializerFactory=Func12976(stack5);
_cache=Func12935(stack3, src._cache);
_config=Func12933(src._config, stack4);
_featureFlags=Func12932(src._featureFlags, stack5);
_view=Func12931(src._view, stack6);
_parser=Func12930(stack7, src._parser);
_injectableValues=Func12929(src._injectableValues, stack8);
_attributes=Func12928(src._attributes, stack9);
_additionalKeyDeserializers=Func12906(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._keyDeserializers);
_modifiers=Func12905(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._keyDeserializers);
_abstractTypeResolvers=Func12904(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._keyDeserializers);
_valueInstantiators=Func12903(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._keyDeserializers);
_factoryConfig=Func12895(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._factoryConfig, this._keyDeserializers, stack5);
_cache=Func12886(stack3, src._cache);
_factory=Func12885(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._factoryConfig, this._keyDeserializers, stack5, stack3._deserializationContext, stack4._factory, stack7._deserializationContext, stack2, stack3);
_config=Func12884(src._config, stack4);
_featureFlags=Func12883(stack5, src._featureFlags);
_view=Func12882(stack6, src._view);
_parser=Func12881(stack7, src._parser);
_injectableValues=Func12880(stack8, src._injectableValues);
_attributes=Func12879(src._attributes, stack9);
_deserializationContext=Func12877(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._factoryConfig, this._keyDeserializers, stack5, stack3._deserializationContext, stack4._factory, stack7._deserializationContext, stack2, stack3);
com.fasterxml.jackson.databind.ObjectMapper#registerModule(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;=Func12876();
Line 220 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new ThreeTenModule());
Line 220 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new ThreeTenModule());
Line 220 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new ThreeTenModule());
Line 220 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new ThreeTenModule());
Line 220 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new ThreeTenModule());
Line 773 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> _assertNotNull('module', module);
Line 4412 com.fasterxml.jackson.databind.ObjectMapper:_assertNotNull ---> if (src == null) {
Line 777 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
com.fasterxml.jackson.databind.module.SimpleModule#getModuleName()Ljava/lang/String;=Func12875();
Line 778 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
Line 781 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func12874();
Line 782 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
_factoryConfig=Func12747(this._additionalSerializers, this._additionalKeySerializers, this._modifiers, this._factoryConfig);
_serializerFactory=Func12744(this._additionalSerializers, this._additionalKeySerializers, this._modifiers, this._factoryConfig, stack4);
_factoryConfig=Func12674(this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators, this._abstractTypeResolvers, this._factoryConfig);
_cache=Func12665(stack3, src._cache);
_factory=Func12664(src._attributes, stack9, stack8, src._injectableValues, stack7._deserializationContext, this._factoryConfig, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators, this._abstractTypeResolvers, stack4._factory, stack3._deserializationContext, stack7, src._parser, stack6, src._view, stack5, src._featureFlags, src._config, stack4, stack3);
_deserializationContext=Func12656(src._attributes, stack9, stack8, src._injectableValues, stack7._deserializationContext, this._factoryConfig, this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators, this._abstractTypeResolvers, stack4._factory, stack3._deserializationContext, stack7, src._parser, stack6, src._view, stack5, src._featureFlags, src._config, stack4, stack3, stack2);
Line 221 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> cache = root.child('/JsonCacheTest');
Line 221 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> cache = root.child('/JsonCacheTest');
Line 222 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> reload();
Line 209 org.openapitools.codegen.utils.JsonCacheTest:reload ---> root.unload();
Line 210 org.openapitools.codegen.utils.JsonCacheTest:reload ---> root.load(new ByteArrayInputStream(JSON.getBytes('UTF-8')));
$stack2=Func4747();
$stack4=Func4746();
Line 4222 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> final JavaType valueType = constructType(JsonNode.class);
desc=Func12651(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Line 1219 com.fasterxml.jackson.databind.type.TypeFactory:_findWellKnownSimple ---> if (clz == CLS_JSON_NODE) return CORE_TYPE_JSON_NODE; // since 2.10
com.fasterxml.jackson.databind.ObjectMapper#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func12642(result);
Line 4254 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> resultNode = (JsonNode) deser.deserialize(p, ctxt);
Line 66 com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer:deserialize ---> switch (p.currentTokenId()) {
$stack4=Func12639(p0);
Line 4249 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> ctxt = createDeserializationContext(p, cfg);
_config=Func12630();
_featureFlags=Func12627();
com.fasterxml.jackson.databind.ObjectMapper#createDeserializationContext(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationConfig;)Lcom/fasterxml/jackson/databind/deser/DefaultDeserializationContext;=Func12615(p, this._deserializationContext, jp, this._attributes, this._view, stack4, src._factory, src._cache);
Func12583(this._mask, com.fasterxml.jackson.databind.DeserializationFeature.UNWRAP_ROOT_VALUE);
Line 4254 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> resultNode = (JsonNode) deser.deserialize(p, ctxt);
Line 66 com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer:deserialize ---> switch (p.currentTokenId()) {
_value=Func12557();
_value=Func12554();
_value=Func12551();
_value=Func12523();
_children=Func12430();
_value=Func12396(this._nodeFactory);
_value=Func12379(this._nodeFactory);
_value=Func12371(nodeFactory, p, ctxt);
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func12369(nodeFactory, p, ctxt);
Func12364(this._children);
Func12358(this._children, stack2);
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func12356(nodeFactory, p, ctxt);
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func12353();
Line 4262 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> return resultNode;
root=Func3979(stack4);
Line 211 org.openapitools.codegen.utils.JsonCacheTest:reload ---> }
Line 223 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> }
Line 906 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertEquals(TEST_OBJECT_0, cache.getObject('/testObjects/0', TEST_OBJECT_1),
value=Func3977();
feats=Func3976();
result#4=Func12352(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Func3972(bindings);
resultType=Func12351(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func3970();
Func3969(bindings, raw, superInterfaces);
_bindings=Func3966(bindings);
_superClass=Func3965();
com.fasterxml.jackson.databind.type.TypeFactory#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func3964();
$stack9=Func12347();
_objectCodec=Func12346(codec);
_writeContext=Func12344();
Func12339(this);
_appendAt=Func12338();
_hasNativeTypeIds=Func12337();
_hasNativeObjectIds=Func12336();
hasNativeIds=Func12334(this._hasNativeTypeIds, this._hasNativeObjectIds, stack11, this);
_serializerFactory=Func12309(this._serFeatures, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._serializationConfig, this._serializerFactory);
_config=Func12308(this._serFeatures, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._serializationConfig);
_serializerCache=Func12307();
Func12288();
cls=Func12287();
com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()Lcom/fasterxml/jackson/databind/type/TypeFactory;=Func12250();
$stack7=Func3679(this, type, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Func12242(bindings);
context=Func12229(this, rawType, curr);
$stack8=Func12228(rawType);
Func12227(rawType);
l=Func12225(cls);
Func3656(context, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
com.fasterxml.jackson.databind.util.ClassUtil#getGenericSuperclass(Ljava/lang/Class;)Ljava/lang/reflect/Type;=Func12217();
$stack1=Func12216(parent);
resultType=Func3624(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
Func12206();
resultType=Func3259(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
$stack16=Func12203(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
l=Func12202(raw, bindings);
asStatic=Func4315(cls, this, bindings);
asStatic=Func4230(cls, this, bindings);
_class=Func12200(raw);
com.fasterxml.jackson.databind.type.TypeFactory#_newSimpleType(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;=Func12191(stack5, bindings, this, raw);
$stack8=Func12189(raw, bindings);
_class=Func12187(raw);
_superClass=Func12186();
_superInterfaces=Func12185();
resultType=Func12183(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Func12182(bindings, raw);
Func12180(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Func11762(this._serFeatures, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._config, this._mask);
Func11759(l3, l2, l1);
Line 719 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> _appendStartMarker(JsonToken.START_OBJECT);
Line 1386 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> if (_hasNativeId) {
Line 1389 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> next =  _last.append(_appendAt, type);
_tokenTypes=Func11753(tokenType);
com.fasterxml.jackson.databind.util.TokenBuffer$Segment#append(ILcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/databind/util/TokenBuffer$Segment;=Func11752();
Line 1391 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> if (next == null) {
Line 1392 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> ++_appendAt;
Line 1397 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> }
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> JsonWriteContext ctxt = _writeContext.createChildObjectContext(forValue);
_writeContext=Func11751(ctxt);
en=Func11749(this._children);
value=Func11748(en);
$stack2=Func11746(en, g);
$stack1=Func11745(name, this._writeContext);
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
_tokenTypes=Func11739(this._tokenTypes, tokenType, index);
_appendAt=Func11736(this._appendAt);
$stack52=Func11733(this._value);
Line 1319 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1322 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type);
_tokenTypes=Func11727(index, tokenType, this._tokenTypes);
_appendAt=Func11724(this._appendAt);
en=Func11723(this._children, l4, stack7, stack10, stack8);
value=Func11722(en);
result#4=Func11720(g, en);
Func11719(name, this._writeContext);
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func11714(index, tokenType);
_tokenTypes=Func11713(this._tokenTypes, typeCode);
_appendAt=Func11710(this._appendAt);
$stack1=Func11707(this._value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
typeCode=Func11702(index, tokenType);
_tokenTypes=Func11701(this._tokenTypes, typeCode, stack8, stack9);
_appendAt=Func11698(this._appendAt);
en=Func11697(this._children, l4, stack7, stack10, stack8);
value=Func11696(en);
Func11694(en, g);
Func11693(name, this._writeContext);
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func11688(tokenType, index);
_tokenTypes=Func11687(this._tokenTypes, stack8, stack9, typeCode);
_appendAt=Func11684(this._appendAt);
Func11681(this._value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
typeCode=Func11676(index, tokenType);
_tokenTypes=Func11675(this._tokenTypes, stack8, stack9, typeCode);
_appendAt=Func11672(this._appendAt);
en=Func11671(this._children, stack10, stack7, stack8, l4);
value=Func11670(en);
this.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.cfg.MapperConfig _config>=Func11668(g, en);
$stack8=Func11667(name, this._writeContext);
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func11662(tokenType, index);
_tokenTypes=Func11661(this._tokenTypes, typeCode, stack8, stack9);
_appendAt=Func11658(this._appendAt);
Func11655(this._value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
typeCode=Func11650(index, tokenType);
_tokenTypes=Func11649(stack8, stack9, this._tokenTypes, typeCode);
_appendAt=Func11646(this._appendAt);
en=Func11645(this._children, stack10, stack7, stack8, l4);
value=Func11644(en);
Func11642(g, en);
Func11641(name, this._writeContext);
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func11636(index, tokenType);
_tokenTypes=Func11635(stack8, stack9, this._tokenTypes, typeCode);
_appendAt=Func11632(this._appendAt);
l5=Func11629(this._value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
typeCode=Func11624(index, tokenType);
_tokenTypes=Func11623(stack8, stack9, this._tokenTypes, typeCode);
_appendAt=Func11620(this._appendAt);
en=Func11619(this._children, l4, stack10, stack7, stack8);
value=Func11618(en);
$stack2=Func11616(g, en);
$stack5=Func11615(this._writeContext, name);
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func11610(tokenType, index);
_tokenTypes=Func11609(stack8, stack9, this._tokenTypes, typeCode);
_appendAt=Func11606(this._appendAt);
Func11603(this._value);
typeCode=Func11598(tokenType, index);
_tokenTypes=Func11597(stack8, typeCode, stack9, this._tokenTypes);
_appendAt=Func11594(this._appendAt);
en=Func11593(this._children, l4, stack10, stack7, stack8);
value=Func11592(en);
other=Func11590(en, g);
other=Func11589(name, this._writeContext);
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func11584(index, tokenType);
_tokenTypes=Func11583(typeCode, this._tokenTypes, stack8, stack9);
_appendAt=Func11580(this._appendAt);
cls=Func11577(this._value);
Func11575(text);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
_tokenTypes=Func11569(typeCode, this._tokenTypes, stack8, stack9, index, tokenType);
_appendAt=Func11566(this._appendAt);
$stack5=Func11565(this._children, stack10, l4, stack7, stack8);
Line 736 com.fasterxml.jackson.databind.util.TokenBuffer:writeEndObject ---> _appendEndMarker(JsonToken.END_OBJECT);
Line 1407 com.fasterxml.jackson.databind.util.TokenBuffer:_appendEndMarker ---> Segment next = _last.append(_appendAt, type);
_startLocation=Func11547();
com.fasterxml.jackson.databind.util.TokenBuffer#asParser()Lcom/fasterxml/jackson/core/JsonParser;=Func11542();
com.fasterxml.jackson.databind.ObjectMapper#getDeserializationConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func11540();
_currToken=Func11528(index, tokenType, this._tokenTypes);
$stack1=Func11526(stack2);
Line 102 com.fasterxml.jackson.databind.util.TokenBufferReadContext:createChildObjectContext ---> ++_index;
_cache=Func11509(src._cache);
_factory=Func11508(src._factory);
_config=Func11507(config);
this.<com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector: com.fasterxml.jackson.databind.introspect.AnnotatedClass _classDef>=Func11468(this._incompleteDeserializers);
_type=Func11392(type);
_classAnnotations=Func11388();
_bindings=Func11387(this._bindings);
_annotationIntrospector=Func11386(this._bindings);
_mixInResolver=Func11385(this._bindings);
_typeFactory=Func11384();
_config=Func11377();
_forSerialization=Func11371();
_classDef=Func11369(stack4, this._bindings, type);
_annotationIntrospector=Func11350();
_type=Func11311(type);
_propCollector=Func11310(stack6, this._mapperFeatures, this._mask, type, stack4, this._bindings);
_annotationIntrospector=Func11296();
_classInfo=Func11295(this._classDef);
curr=Func11254();
Func11250();
Line 296 com.fasterxml.jackson.databind.JavaType:isEnumType ---> return _class.isEnum();
Func11245();
this.<com.fasterxml.jackson.databind.type.ClassKey: java.lang.Class _class>=Func11240(type);
com.fasterxml.jackson.databind.DeserializationContext#getConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func11237(this._config);
Line 97 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<?> deser = _findCustomBeanDeserializer(type, config, beanDesc);
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func11222();
Line 98 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> if (deser != null) {
curr=Func11219();
$stack2=Func11216();
Line 131 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> deser = findStdDeserializer(ctxt, type, beanDesc);
Func11214(type);
com.fasterxml.jackson.databind.JavaType#getRawClass()Ljava/lang/Class;=Func11213();
Line 1795 com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:findDefaultDeserializer ---> if ((rawType == CLASS_OBJECT) || (rawType == CLASS_SERIALIZABLE)) {
NOT_REFEFERENCE_PROP=Func10965();
_simpleName=Func10956();
_annotationIntrospector=Func10948(this._annotationIntrospector, this._config, this._forSerialization);
_typeContext=Func10342();
_annotations=Func10341();
_field=Func10340();
value=Func10331(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2);
_typeContext=Func10303();
_field=Func10301();
value=Func10292(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_typeContext=Func10264();
_field=Func10262();
value=Func10253(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_typeContext=Func10225();
_field=Func10223();
value=Func10214(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2);
_typeContext=Func10186();
_field=Func10184();
value=Func10175(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_typeContext=Func10147();
_field=Func10145();
value=Func10136(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_typeContext=Func10108();
_field=Func10106();
value=Func10097(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_fields=Func10062(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_setters=Func10054();
_fields=Func10045(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_setters=Func10037();
_fields=Func10024(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_setters=Func10016();
_fields=Func10007(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_setters=Func9999();
_fields=Func9990(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack3);
_fields=Func9981(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_ctorParameters=Func9969();
_fields=Func9960(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
Func9914();
_beanDesc=Func9913();
_config=Func9910(this._config);
_ignoreAllUnknown=Func9892();
ignored=Func9890();
$stack2=Func9888();
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addBeanProps.492:185=Func9885();
result=Func9878();
property=Func9877(propDefsIn);
property=Func9876(stack18, propDefsIn, l8);
ann=Func9855(this._typeFactory, this._bindings, this._field, this._typeContext, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func9854();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func9853();
this.<com.fasterxml.jackson.databind.introspect.BasicBeanDescription: java.util.List _properties>=Func9828(this._typeContext, this._field, this._typeFactory, this._bindings, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func9827();
MISSING_VALUE_DESERIALIZER=Func9751();
_type=Func9081();
_valueDeserializer=Func9080(com.fasterxml.jackson.databind.deser.SettableBeanProperty.MISSING_VALUE_DESERIALIZER);
Func8852(this._incompleteDeserializers);
Func8850(this._simpleName, this._properties, this._config, this._mapperFeatures);
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#iterator()Ljava/util/Iterator;=Func8846(this._simpleName, this._properties);
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve.468:96=Func8845(end#15);
$stack6=Func8816(this._incompleteDeserializers);
Func8766();
Line 296 com.fasterxml.jackson.databind.JavaType:isEnumType ---> return _class.isEnum();
this.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: com.fasterxml.jackson.databind.JavaType _type>=Func8754();
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func8752();
Line 98 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> if (deser != null) {
Func8744();
Line 131 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> deser = findStdDeserializer(ctxt, type, beanDesc);
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#findStdDeserializer(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func8743();
Line 133 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> return (JsonDeserializer<Object>)deser;
Line 906 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertEquals(TEST_OBJECT_0, cache.getObject('/testObjects/0', TEST_OBJECT_1),
Line 908 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertFalse(root.isDirty(), 'cache should not be dirty after getObject(path, default);');
Line 908 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertFalse(root.isDirty(), 'cache should not be dirty after getObject(path, default);');
Line 910 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertSame(TEST_OBJECT_1, cache.getObject('/testObjects/2', TEST_OBJECT_1),
Func30(this._children, stack2);
Line 910 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertSame(TEST_OBJECT_1, cache.getObject('/testObjects/2', TEST_OBJECT_1),
Line 912 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertTrue(root.isDirty(), 'cache should be dirty after getObject(nonExistentPath, default);');
Line 912 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertTrue(root.isDirty(), 'cache should be dirty after getObject(nonExistentPath, default);');
Line 914 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertSame(TEST_OBJECT_1, cache.getObject('/testObjects/2', TestObject.class),
$stack8=Func29();
index=Func17(this._children, ptr);
Line 115 com.fasterxml.jackson.databind.node.ArrayNode:get ---> if ((index >= 0) && (index < _children.size())) {
com.fasterxml.jackson.databind.node.POJONode#getPojo()Ljava/lang/Object;=Func7();
result=Func6(node, stack14);
com.fasterxml.jackson.databind.type.TypeFactory#_fromAny(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/reflect/Type;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func8664();
com.fasterxml.jackson.databind.type.TypeFactory#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func3(stack3);
_hasNativeId=Func8662();
_objectCodec=Func8661(codec);
_writeContext=Func8660();
_tokens=Func8659();
_appendAt=Func8658();
_hasNativeTypeIds=Func8657();
_hasNativeObjectIds=Func8656();
_config=Func8629(this._serFeatures, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._serializationConfig);
_serializerCache=Func8628();
_nullValueSerializer=Func8625();
_classAnnotations=Func8535();
_bindings=Func8534(this._config, this._bindings);
_typeFactory=Func8531();
_type=Func8459();
_annotationIntrospector=Func8444();
_classInfo=Func8443(stack4, this._config, this._bindings);
_annotationIntrospector=Func8203(this._config);
_annotationIntrospector=Func8099(this._config);
_name=Func8097();
_annotationIntrospector=Func8047(this._config);
_name=Func8045();
_annotationIntrospector=Func7995(this._config);
_name=Func7993();
_annotationIntrospector=Func7943(this._config);
_name=Func7941();
_annotationIntrospector=Func7895(this._config);
_name=Func7893();
_typeContext=Func7670();
_annotations=Func7669();
_field=Func7668();
value=Func7659(stack4, this._config, this._bindings, this._typeFactory, stack2);
_typeContext=Func7633();
_annotations=Func7632();
_field=Func7631();
value=Func7622(stack2, stack4, this._config, this._bindings, this._typeFactory);
_typeContext=Func7596();
_annotations=Func7595();
_field=Func7594();
value=Func7585(stack4, this._config, this._bindings, this._typeFactory, stack2);
_typeContext=Func7559();
_annotations=Func7558();
_field=Func7557();
value=Func7548(stack4, this._config, this._bindings, this._typeFactory, stack2);
_typeContext=Func7522();
_annotations=Func7521();
_field=Func7520();
value=Func7511(stack2, stack4, this._config, this._bindings, this._typeFactory);
_typeContext=Func7485();
_annotations=Func7484();
_field=Func7483();
value=Func7474(stack4, this._config, this._bindings, this._typeFactory, stack2);
_typeContext=Func7448();
_annotations=Func7447();
_field=Func7446();
value=Func7437(stack2, stack4, this._config, this._bindings, this._typeFactory);
_fields=Func7404(stack3, stack4, this._config, this._bindings, this._typeFactory, stack2);
_fields=Func7395(stack2, stack4, this._config, this._bindings, this._typeFactory, stack3);
_fields=Func7386(stack4, this._config, this._bindings, this._typeFactory, stack2, stack3);
_fields=Func7377(stack4, this._config, this._bindings, this._typeFactory, stack2, stack3);
_fields=Func7368(stack4, this._config, this._bindings, this._typeFactory, stack2, stack3);
_fields=Func7359(stack4, this._config, this._bindings, this._typeFactory, stack2, stack3);
_fields=Func7350(stack2, stack4, this._config, this._bindings, this._typeFactory, stack3);
Line 231 com.fasterxml.jackson.databind.ser.BeanSerializerFactory:_createSerializer2 ---> ser = findBeanOrAddOnSerializer(prov, type, beanDesc, staticTyping);
Func7345();
Line 172 com.fasterxml.jackson.databind.util.ClassUtil:canBeABeanType ---> if (Enum.class.isAssignableFrom(type)) {
Func7340();
Line 286 com.fasterxml.jackson.databind.ser.BeanSerializerFactory:findBeanOrAddOnSerializer ---> return constructBeanOrAddOnSerializer(prov, type, beanDesc, staticTyping);
_name=Func7154();
_typeSerializer=Func7153();
_field=Func7149(this._field);
_suppressableValue=Func7147();
_name=Func7021();
_typeSerializer=Func7020();
_field=Func7016(this._field);
_suppressableValue=Func7014();
_name=Func6894();
_typeSerializer=Func6893();
_field=Func6889(this._field);
_suppressableValue=Func6887();
_name=Func6760();
_typeSerializer=Func6759();
_field=Func6755(this._field);
_suppressableValue=Func6754();
_name=Func6627();
_typeSerializer=Func6626();
_field=Func6622(this._field);
_suppressableValue=Func6621();
_name=Func6505();
_field=Func6501(this._field);
_suppressableValue=Func6500();
_name=Func6384();
_field=Func6380(this._field);
_suppressableValue=Func6379();
_props=Func6351();
_filteredProps=Func6350(this._type);
_propertyFilterId=Func6346();
_serializer=Func6305();
_serializer=Func6291();
_serializer=Func6277();
_serializer=Func6275();
_serializer=Func6273();
Func6265(this._serFeatures, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._config);
Func6262();
Line 719 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> _appendStartMarker(JsonToken.START_OBJECT);
Line 1386 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> if (_hasNativeId) {
Line 1389 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> next =  _last.append(_appendAt, type);
_tokenTypes=Func6257(tokenType);
com.fasterxml.jackson.databind.util.TokenBuffer$Segment#append(ILcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/databind/util/TokenBuffer$Segment;=Func6256();
Line 1391 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> if (next == null) {
Line 1392 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> ++_appendAt;
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> JsonWriteContext ctxt = _writeContext.createChildObjectContext(forValue);
props=Func6252(this._props);
i=Func6251();
len=Func6250(props, i);
Func6246(this._field);
value=Func6245(stack11);
ser=Func6243(this._serializer);
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
_tokenTypes=Func6234(this._tokenTypes, tokenType, index);
_appendAt=Func6231(this._appendAt);
$stack3=Func6227(value);
Line 1319 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1322 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type);
_tokenTypes=Func6221(tokenType, index, this._tokenTypes);
_appendAt=Func6218(this._appendAt);
i=Func6217(len, props, i);
Func6212(this._field);
value=Func6211(stack11);
ser=Func6209(this._serializer);
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func6201(tokenType, index);
_tokenTypes=Func6200(typeCode, this._tokenTypes);
_appendAt=Func6197(this._appendAt);
$stack1=Func6193(value);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
typeCode=Func6188(tokenType, index);
_tokenTypes=Func6187(stack9, stack8, typeCode, this._tokenTypes);
_appendAt=Func6184(this._appendAt);
i=Func6183(len, props, i);
Func6178(this._field);
value=Func6177(stack11);
ser=Func6175(this._serializer);
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func6167(index, tokenType);
_tokenTypes=Func6166(this._tokenTypes, typeCode, stack9, stack8);
_appendAt=Func6163(this._appendAt);
Func6159(value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
typeCode=Func6154(index, tokenType);
_tokenTypes=Func6153(this._tokenTypes, typeCode, stack8, stack9);
_appendAt=Func6150(this._appendAt);
i=Func6149(len, props, i);
Func6144(this._field);
value=Func6143(stack11);
ser=Func6141(this._serializer);
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func6133(index, tokenType);
_tokenTypes=Func6132(this._tokenTypes, typeCode, stack8, stack9);
_appendAt=Func6129(this._appendAt);
cls=Func6125(value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
typeCode=Func6120(index, tokenType);
_tokenTypes=Func6119(typeCode, this._tokenTypes, stack8, stack9);
_appendAt=Func6116(this._appendAt);
Func6111(this._field);
value=Func6110(stack11);
ser=Func6108(this._serializer);
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func6100(index, tokenType);
_tokenTypes=Func6099(typeCode, this._tokenTypes, stack8, stack9);
_appendAt=Func6096(this._appendAt);
Func6092(value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
typeCode=Func6087(tokenType, index);
_tokenTypes=Func6086(typeCode, this._tokenTypes, stack8, stack9);
_appendAt=Func6083(this._appendAt);
Func6079(this._field);
value=Func6078(stack11);
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func6069(tokenType, index);
_tokenTypes=Func6068(stack9, stack8, typeCode, this._tokenTypes);
_appendAt=Func6065(this._appendAt);
Func6063(value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
typeCode=Func6058(tokenType, index);
_tokenTypes=Func6057(stack9, stack8, typeCode, this._tokenTypes);
_appendAt=Func6054(this._appendAt);
value=Func6049(this._field);
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
typeCode=Func6040(tokenType, index);
_tokenTypes=Func6039(this._tokenTypes, stack9, stack8, typeCode);
_appendAt=Func6036(this._appendAt);
Func6035(value);
Func6033(text);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
_tokenTypes=Func6027(this._tokenTypes, index, tokenType, stack9, stack8, typeCode);
_appendAt=Func6024(this._appendAt);
Line 736 com.fasterxml.jackson.databind.util.TokenBuffer:writeEndObject ---> _appendEndMarker(JsonToken.END_OBJECT);
Line 1407 com.fasterxml.jackson.databind.util.TokenBuffer:_appendEndMarker ---> Segment next = _last.append(_appendAt, type);
_tokenTypes=Func6017(this._tokenTypes, index, tokenType);
_segment=Func6013(this._hasNativeTypeIds, this._objectCodec, this._hasNativeObjectIds);
_segmentPtr=Func6012();
_startLocation=Func6006();
com.fasterxml.jackson.databind.util.TokenBuffer#asParser()Lcom/fasterxml/jackson/core/JsonParser;=Func6002();
com.fasterxml.jackson.databind.ObjectMapper#getDeserializationConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func6000();
_segmentPtr=Func5996(this._segmentPtr);
_currToken=Func5991(this._tokenTypes);
Func5989(stack2);
Line 102 com.fasterxml.jackson.databind.util.TokenBufferReadContext:createChildObjectContext ---> ++_index;
Line 914 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertSame(TEST_OBJECT_1, cache.getObject('/testObjects/2', TestObject.class),
