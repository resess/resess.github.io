Line 102 com.fasterxml.jackson.databind.util.TokenBufferReadContext:createChildObjectContext ---> ++_index;
Func5993(stack2);
_currToken=Func5995(this._tokenTypes);
_segmentPtr=Func6000(this._segmentPtr);
com.fasterxml.jackson.databind.ObjectMapper#getDeserializationConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func6004();
com.fasterxml.jackson.databind.util.TokenBuffer#asParser()Lcom/fasterxml/jackson/core/JsonParser;=Func6006();
_startLocation=Func6010();
_segmentPtr=Func6016();
_segment=Func6017(this._hasNativeTypeIds, this._objectCodec, this._hasNativeObjectIds);
_tokenTypes=Func6021(this._tokenTypes, index, tokenType);
Line 1407 com.fasterxml.jackson.databind.util.TokenBuffer:_appendEndMarker ---> Segment next = _last.append(_appendAt, type);
Line 736 com.fasterxml.jackson.databind.util.TokenBuffer:writeEndObject ---> _appendEndMarker(JsonToken.END_OBJECT);
_appendAt=Func6028(this._appendAt);
_tokenTypes=Func6031(this._tokenTypes, index, tokenType, stack9, typeCode, stack8);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Func6037(text);
Func6039(value);
_appendAt=Func6040(this._appendAt);
_tokenTypes=Func6043(this._tokenTypes, stack9, typeCode, stack8);
typeCode=Func6044(tokenType, index);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
value=Func6053(this._field);
_appendAt=Func6058(this._appendAt);
_tokenTypes=Func6061(stack9, stack8, typeCode, this._tokenTypes);
typeCode=Func6062(tokenType, index);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Func6067(value);
_appendAt=Func6069(this._appendAt);
_tokenTypes=Func6072(stack9, stack8, typeCode, this._tokenTypes);
typeCode=Func6073(tokenType, index);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
value=Func6082(stack11);
Func6083(this._field);
_appendAt=Func6087(this._appendAt);
_tokenTypes=Func6090(typeCode, this._tokenTypes, stack8, stack9);
typeCode=Func6091(tokenType, index);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Func6096(value);
_appendAt=Func6100(this._appendAt);
_tokenTypes=Func6103(typeCode, this._tokenTypes, stack8, stack9);
typeCode=Func6104(index, tokenType);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
ser=Func6112(this._serializer);
value=Func6114(stack11);
Func6115(this._field);
_appendAt=Func6120(this._appendAt);
_tokenTypes=Func6123(typeCode, this._tokenTypes, stack8, stack9);
typeCode=Func6124(index, tokenType);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
cls=Func6129(value);
_appendAt=Func6133(this._appendAt);
_tokenTypes=Func6136(this._tokenTypes, typeCode, stack8, stack9);
typeCode=Func6137(index, tokenType);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
ser=Func6145(this._serializer);
value=Func6147(stack11);
Func6148(this._field);
i=Func6153(len, props, i);
_appendAt=Func6154(this._appendAt);
_tokenTypes=Func6157(this._tokenTypes, typeCode, stack8, stack9);
typeCode=Func6158(index, tokenType);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Func6163(value);
_appendAt=Func6167(this._appendAt);
_tokenTypes=Func6170(this._tokenTypes, typeCode, stack9, stack8);
typeCode=Func6171(index, tokenType);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
ser=Func6179(this._serializer);
value=Func6181(stack11);
Func6182(this._field);
i=Func6187(len, props, i);
_appendAt=Func6188(this._appendAt);
_tokenTypes=Func6191(stack9, stack8, typeCode, this._tokenTypes);
typeCode=Func6192(tokenType, index);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
$stack1=Func6197(value);
_appendAt=Func6201(this._appendAt);
_tokenTypes=Func6204(typeCode, this._tokenTypes);
typeCode=Func6205(tokenType, index);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
ser=Func6213(this._serializer);
value=Func6215(stack11);
Func6216(this._field);
i=Func6221(len, props, i);
_appendAt=Func6222(this._appendAt);
_tokenTypes=Func6225(tokenType, index, this._tokenTypes);
Line 1322 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type);
Line 1319 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
$stack3=Func6231(value);
_appendAt=Func6235(this._appendAt);
_tokenTypes=Func6238(this._tokenTypes, tokenType, index);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 755 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
ser=Func6247(this._serializer);
value=Func6249(stack11);
Func6250(this._field);
len=Func6254(props, i);
i=Func6255();
props=Func6256(this._props);
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> JsonWriteContext ctxt = _writeContext.createChildObjectContext(forValue);
Line 1392 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> ++_appendAt;
Line 1391 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> if (next == null) {
com.fasterxml.jackson.databind.util.TokenBuffer$Segment#append(ILcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/databind/util/TokenBuffer$Segment;=Func6260();
_tokenTypes=Func6261(tokenType);
Line 1389 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> next =  _last.append(_appendAt, type);
Line 1386 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> if (_hasNativeId) {
Line 719 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> _appendStartMarker(JsonToken.START_OBJECT);
Func6266();
Func6269(this._serFeatures, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._config, this._mask);
_serializer=Func6277();
_serializer=Func6279();
_serializer=Func6281();
_serializer=Func6295();
_serializer=Func6309();
_propertyFilterId=Func6350();
_filteredProps=Func6354(this._type);
_props=Func6355();
_suppressableValue=Func6383();
_field=Func6384(this._field);
_name=Func6388();
_suppressableValue=Func6504();
_field=Func6505(this._field);
_name=Func6509();
_suppressableValue=Func6625();
_field=Func6626(this._field);
_typeSerializer=Func6630();
_name=Func6631();
_suppressableValue=Func6758();
_field=Func6759(this._field);
_typeSerializer=Func6763();
_name=Func6764();
_suppressableValue=Func6891();
_field=Func6893(this._field);
_typeSerializer=Func6897();
_name=Func6898();
_suppressableValue=Func7018();
_field=Func7020(this._field);
_typeSerializer=Func7024();
_name=Func7025();
_suppressableValue=Func7151();
_field=Func7153(this._field);
_typeSerializer=Func7157();
_name=Func7158();
Line 286 com.fasterxml.jackson.databind.ser.BeanSerializerFactory:findBeanOrAddOnSerializer ---> return constructBeanOrAddOnSerializer(prov, type, beanDesc, staticTyping);
Func7344();
Line 172 com.fasterxml.jackson.databind.util.ClassUtil:canBeABeanType ---> if (Enum.class.isAssignableFrom(type)) {
Func7349();
Line 231 com.fasterxml.jackson.databind.ser.BeanSerializerFactory:_createSerializer2 ---> ser = findBeanOrAddOnSerializer(prov, type, beanDesc, staticTyping);
_fields=Func7354(stack2, stack4, this._config, this._bindings, this._typeFactory, stack3);
_fields=Func7363(stack4, this._config, this._bindings, this._typeFactory, stack2, stack3);
_fields=Func7372(stack4, this._config, this._bindings, this._typeFactory, stack2, stack3);
_fields=Func7381(stack4, this._config, this._bindings, this._typeFactory, stack2, stack3);
_fields=Func7390(stack2, stack4, this._config, this._bindings, this._typeFactory, stack3);
_fields=Func7399(stack2, stack4, this._config, this._bindings, this._typeFactory, stack3);
_fields=Func7408(stack3, stack4, this._config, this._bindings, this._typeFactory, stack2);
value=Func7441(stack2, stack4, this._config, this._bindings, this._typeFactory);
_field=Func7450();
_annotations=Func7451();
_typeContext=Func7452();
value=Func7478(stack4, this._config, this._bindings, this._typeFactory, stack2);
_field=Func7487();
_annotations=Func7488();
_typeContext=Func7489();
value=Func7515(stack2, stack4, this._config, this._bindings, this._typeFactory);
_field=Func7524();
_annotations=Func7525();
_typeContext=Func7526();
value=Func7552(stack4, this._config, this._bindings, this._typeFactory, stack2);
_field=Func7561();
_annotations=Func7562();
_typeContext=Func7563();
value=Func7589(stack2, stack4, this._config, this._bindings, this._typeFactory);
_field=Func7598();
_annotations=Func7599();
_typeContext=Func7600();
value=Func7626(stack2, stack4, this._config, this._bindings, this._typeFactory);
_field=Func7635();
_annotations=Func7636();
_typeContext=Func7637();
value=Func7663(stack4, this._config, this._bindings, this._typeFactory, stack2);
_field=Func7672();
_annotations=Func7673();
_typeContext=Func7674();
_name=Func7897();
_annotationIntrospector=Func7899(this._config);
_name=Func7945();
_annotationIntrospector=Func7947(this._config);
_name=Func7997();
_annotationIntrospector=Func7999(this._config);
_name=Func8049();
_annotationIntrospector=Func8051(this._config);
_name=Func8101();
_annotationIntrospector=Func8103(this._config);
_name=Func8153();
_annotationIntrospector=Func8155(this._config);
_name=Func8205();
_annotationIntrospector=Func8207(this._config);
_classInfo=Func8447(stack4, this._config, this._bindings);
_annotationIntrospector=Func8448();
_type=Func8463();
_typeFactory=Func8535();
_bindings=Func8538(this._config, this._bindings);
_classAnnotations=Func8539();
_nullValueSerializer=Func8629();
_serializerCache=Func8632();
_config=Func8633(this._serFeatures, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._serializationConfig);
_hasNativeObjectIds=Func8660();
_hasNativeTypeIds=Func8661();
_appendAt=Func8662();
_tokens=Func8663();
_writeContext=Func8664();
_objectCodec=Func8665(codec);
_hasNativeId=Func8666();
com.fasterxml.jackson.databind.type.TypeFactory#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func3(stack3);
com.fasterxml.jackson.databind.type.TypeFactory#_fromAny(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/reflect/Type;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func8668();
result=Func6(node, stack14);
com.fasterxml.jackson.databind.node.POJONode#getPojo()Ljava/lang/Object;=Func7();
Line 115 com.fasterxml.jackson.databind.node.ArrayNode:get ---> if ((index >= 0) && (index < _children.size())) {
index=Func17(this._children, ptr);
$stack8=Func29();
Line 914 org.openapitools.codegen.utils.JsonCacheTest:testGetObjectWithDefault ---> assertSame(TEST_OBJECT_1, cache.getObject('/testObjects/2', TestObject.class),
Func30(this._children, stack2);
Line 133 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> return (JsonDeserializer<Object>)deser;
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory#findStdDeserializer(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func8747();
Line 131 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> deser = findStdDeserializer(ctxt, type, beanDesc);
Func8748();
Line 98 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> if (deser != null) {
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func8756();
this.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: com.fasterxml.jackson.databind.JavaType _type>=Func8758();
Line 296 com.fasterxml.jackson.databind.JavaType:isEnumType ---> return _class.isEnum();
Func8770();
$stack6=Func8820(this._incompleteDeserializers);
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.resolve.468:96=Func8849(end#15);
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap#iterator()Ljava/util/Iterator;=Func8850(this._simpleName, this._properties);
Func8854(this._simpleName, this._properties, this._config, this._mapperFeatures);
Func8856(this._incompleteDeserializers);
_valueDeserializer=Func9084(com.fasterxml.jackson.databind.deser.SettableBeanProperty.MISSING_VALUE_DESERIALIZER);
_type=Func9085();
MISSING_VALUE_DESERIALIZER=Func9755();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func9831();
this.<com.fasterxml.jackson.databind.introspect.BasicBeanDescription: java.util.List _properties>=Func9832(this._typeContext, this._field, this._typeFactory, this._bindings, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func9857();
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperClass(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;=Func9858();
ann=Func9859(this._typeFactory, this._bindings, this._field, this._typeContext, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
property=Func9880(stack18, propDefsIn, l8);
property=Func9881(propDefsIn);
result=Func9882();
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addBeanProps.492:185=Func9889();
$stack2=Func9892();
ignored=Func9894();
_ignoreAllUnknown=Func9896();
_config=Func9914(this._config);
_beanDesc=Func9917();
Func9918();
_fields=Func9964(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_ctorParameters=Func9973();
_fields=Func9985(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_fields=Func9994(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack3);
_setters=Func10003();
_fields=Func10011(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_setters=Func10020();
_fields=Func10028(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_setters=Func10041();
_fields=Func10049(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
_setters=Func10058();
_fields=Func10066(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2, stack3);
value=Func10101(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_field=Func10110();
_typeContext=Func10112();
value=Func10140(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_field=Func10149();
_typeContext=Func10151();
value=Func10179(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_field=Func10188();
_typeContext=Func10190();
value=Func10218(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2);
_field=Func10227();
_typeContext=Func10229();
value=Func10257(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_field=Func10266();
_typeContext=Func10268();
value=Func10296(stack2, this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver);
_field=Func10305();
_typeContext=Func10307();
value=Func10335(this._classDef, this._type, this._annotationIntrospector, this._typeFactory, this._mixInResolver, stack2);
_field=Func10344();
_annotations=Func10345();
_typeContext=Func10346();
_forSerialization=Func10570(this._annotationIntrospector, this._config, this._forSerialization);
_name=Func10571(stack3);
_simpleName=Func10581();
_forSerialization=Func10633(this._annotationIntrospector, this._config, this._forSerialization);
_name=Func10634(stack3);
_simpleName=Func10644();
_forSerialization=Func10696(this._annotationIntrospector, this._config, this._forSerialization);
_name=Func10697(stack3);
_simpleName=Func10707();
_forSerialization=Func10759(this._annotationIntrospector, this._config, this._forSerialization);
_name=Func10760(stack3);
_simpleName=Func10770();
_forSerialization=Func10822(this._annotationIntrospector, this._config, this._forSerialization);
_name=Func10823(stack3);
_simpleName=Func10833();
_forSerialization=Func10885(this._annotationIntrospector, this._config, this._forSerialization);
_name=Func10886(stack3);
_simpleName=Func10896();
_forSerialization=Func10949(this._annotationIntrospector, this._config, this._forSerialization);
_name=Func10950(stack3);
_annotationIntrospector=Func10952(this._annotationIntrospector, this._config, this._forSerialization);
_simpleName=Func10960();
NOT_REFEFERENCE_PROP=Func10969();
Line 1795 com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:findDefaultDeserializer ---> if ((rawType == CLASS_OBJECT) || (rawType == CLASS_SERIALIZABLE)) {
com.fasterxml.jackson.databind.JavaType#getRawClass()Ljava/lang/Class;=Func11217();
Func11218(type);
Line 131 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> deser = findStdDeserializer(ctxt, type, beanDesc);
$stack2=Func11220();
curr=Func11223();
Line 98 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> if (deser != null) {
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory#_findCustomBeanDeserializer(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer;=Func11226();
Line 97 com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:createBeanDeserializer ---> JsonDeserializer<?> deser = _findCustomBeanDeserializer(type, config, beanDesc);
com.fasterxml.jackson.databind.DeserializationContext#getConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func11241(this._config);
this.<com.fasterxml.jackson.databind.type.ClassKey: java.lang.Class _class>=Func11244(type);
Func11249();
Line 296 com.fasterxml.jackson.databind.JavaType:isEnumType ---> return _class.isEnum();
Func11254();
curr=Func11258();
_classInfo=Func11299(this._classDef);
_annotationIntrospector=Func11300();
_propCollector=Func11314(stack6, this._mask, this._mapperFeatures, type, stack4, this._bindings);
_type=Func11315(type);
_annotationIntrospector=Func11354();
_classDef=Func11373(stack4, this._bindings, type);
_forSerialization=Func11375();
_config=Func11381();
_typeFactory=Func11388();
_mixInResolver=Func11389(this._bindings);
_annotationIntrospector=Func11390(this._bindings);
_bindings=Func11391(this._bindings);
_classAnnotations=Func11392();
_type=Func11396(type);
this.<com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector: com.fasterxml.jackson.databind.introspect.AnnotatedClass _classDef>=Func11472(this._incompleteDeserializers);
_config=Func11511(config);
_factory=Func11512(src._factory);
_cache=Func11513(src._cache);
Line 102 com.fasterxml.jackson.databind.util.TokenBufferReadContext:createChildObjectContext ---> ++_index;
$stack1=Func11530(stack2);
_currToken=Func11532(index, tokenType, this._tokenTypes);
com.fasterxml.jackson.databind.ObjectMapper#getDeserializationConfig()Lcom/fasterxml/jackson/databind/DeserializationConfig;=Func11544();
com.fasterxml.jackson.databind.util.TokenBuffer#asParser()Lcom/fasterxml/jackson/core/JsonParser;=Func11546();
_startLocation=Func11551();
Line 1407 com.fasterxml.jackson.databind.util.TokenBuffer:_appendEndMarker ---> Segment next = _last.append(_appendAt, type);
Line 736 com.fasterxml.jackson.databind.util.TokenBuffer:writeEndObject ---> _appendEndMarker(JsonToken.END_OBJECT);
$stack5=Func11569(this._children, stack10, l4, stack7, stack8);
_appendAt=Func11570(this._appendAt);
_tokenTypes=Func11573(typeCode, this._tokenTypes, stack8, stack9, index, tokenType);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Func11579(text);
cls=Func11581(this._value);
_appendAt=Func11584(this._appendAt);
_tokenTypes=Func11587(typeCode, this._tokenTypes, stack8, stack9);
typeCode=Func11588(index, tokenType);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
other=Func11593(name, this._writeContext);
other=Func11594(en, g);
value=Func11596(en);
en=Func11597(this._children, l4, stack10, stack7, stack8);
_appendAt=Func11598(this._appendAt);
_tokenTypes=Func11601(stack8, typeCode, stack9, this._tokenTypes);
typeCode=Func11602(tokenType, index);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Func11607(this._value);
_appendAt=Func11610(this._appendAt);
_tokenTypes=Func11613(stack8, stack9, this._tokenTypes, typeCode);
typeCode=Func11614(tokenType, index);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
$stack5=Func11619(this._writeContext, name);
$stack2=Func11620(g, en);
value=Func11622(en);
en=Func11623(this._children, l4, stack10, stack7, stack8);
_appendAt=Func11624(this._appendAt);
_tokenTypes=Func11627(stack8, stack9, this._tokenTypes, typeCode);
typeCode=Func11628(index, tokenType);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
l5=Func11633(this._value);
_appendAt=Func11636(this._appendAt);
_tokenTypes=Func11639(stack8, stack9, this._tokenTypes, typeCode);
typeCode=Func11640(index, tokenType);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Func11645(name, this._writeContext);
Func11646(g, en);
value=Func11648(en);
en=Func11649(this._children, stack10, stack7, stack8, l4);
_appendAt=Func11650(this._appendAt);
_tokenTypes=Func11653(stack8, stack9, this._tokenTypes, typeCode);
typeCode=Func11654(index, tokenType);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Func11659(this._value);
_appendAt=Func11662(this._appendAt);
_tokenTypes=Func11665(this._tokenTypes, typeCode, stack8, stack9);
typeCode=Func11666(tokenType, index);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
$stack8=Func11671(name, this._writeContext);
this.<com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.cfg.MapperConfig _config>=Func11672(g, en);
value=Func11674(en);
en=Func11675(this._children, stack10, stack7, stack8, l4);
_appendAt=Func11676(this._appendAt);
_tokenTypes=Func11679(this._tokenTypes, stack8, stack9, typeCode);
typeCode=Func11680(index, tokenType);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
Func11685(this._value);
_appendAt=Func11688(this._appendAt);
_tokenTypes=Func11691(this._tokenTypes, stack8, stack9, typeCode);
typeCode=Func11692(tokenType, index);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Func11697(name, this._writeContext);
Func11698(en, g);
value=Func11700(en);
en=Func11701(this._children, l4, stack10, stack7, stack8);
_appendAt=Func11702(this._appendAt);
_tokenTypes=Func11705(this._tokenTypes, typeCode, stack8, stack9);
typeCode=Func11706(index, tokenType);
Line 1345 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type, value);
Line 1342 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
$stack1=Func11711(this._value);
_appendAt=Func11714(this._appendAt);
_tokenTypes=Func11717(this._tokenTypes, typeCode);
typeCode=Func11718(index, tokenType);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
Func11723(name, this._writeContext);
result#4=Func11724(g, en);
value=Func11726(en);
en=Func11727(this._children, l4, stack7, stack10, stack8);
_appendAt=Func11728(this._appendAt);
_tokenTypes=Func11731(index, tokenType, this._tokenTypes);
Line 1322 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> next = _last.append(_appendAt, type);
Line 1319 com.fasterxml.jackson.databind.util.TokenBuffer:_appendValue ---> if (_hasNativeId) {
$stack52=Func11737(this._value);
_appendAt=Func11740(this._appendAt);
_tokenTypes=Func11743(this._tokenTypes, tokenType, index);
Line 1368 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> next = _last.append(_appendAt, JsonToken.FIELD_NAME, value);
Line 1365 com.fasterxml.jackson.databind.util.TokenBuffer:_appendFieldName ---> if (_hasNativeId) {
Line 748 com.fasterxml.jackson.databind.util.TokenBuffer:writeFieldName ---> _appendFieldName(name);
$stack1=Func11749(name, this._writeContext);
$stack2=Func11750(en, g);
value=Func11752(en);
en=Func11753(this._children);
_writeContext=Func11755(ctxt);
Line 720 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> JsonWriteContext ctxt = _writeContext.createChildObjectContext(forValue);
Line 1397 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> }
Line 1392 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> ++_appendAt;
Line 1391 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> if (next == null) {
com.fasterxml.jackson.databind.util.TokenBuffer$Segment#append(ILcom/fasterxml/jackson/core/JsonToken;)Lcom/fasterxml/jackson/databind/util/TokenBuffer$Segment;=Func11756();
_tokenTypes=Func11757(tokenType);
Line 1389 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> next =  _last.append(_appendAt, type);
Line 1386 com.fasterxml.jackson.databind.util.TokenBuffer:_appendStartMarker ---> if (_hasNativeId) {
Line 719 com.fasterxml.jackson.databind.util.TokenBuffer:writeStartObject ---> _appendStartMarker(JsonToken.START_OBJECT);
Func11763(l3, l2, l1);
Func11766(this._serFeatures, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._config, this._mask);
Func12184(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Func12186(bindings, raw);
resultType=Func12187(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
_superInterfaces=Func12189();
_superClass=Func12190();
_class=Func12191(raw);
$stack8=Func12193(raw, bindings);
com.fasterxml.jackson.databind.type.TypeFactory#_newSimpleType(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;=Func12195(stack5, bindings, this, raw);
_class=Func12204(raw);
asStatic=Func4230(cls, this, bindings);
asStatic=Func4315(cls, this, bindings);
l=Func12206(raw, bindings);
$stack16=Func12207(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
resultType=Func3259(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Func12210();
resultType=Func3624(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, type);
$stack1=Func12220(parent);
com.fasterxml.jackson.databind.util.ClassUtil#getGenericSuperclass(Ljava/lang/Class;)Ljava/lang/reflect/Type;=Func12221();
Func3656(context, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS, this);
l=Func12229(cls);
Func12231(rawType);
$stack8=Func12232(rawType);
context=Func12233(this, rawType, curr);
Func12246(bindings);
$stack7=Func3679(this, type, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
com.fasterxml.jackson.databind.cfg.MapperConfig#getTypeFactory()Lcom/fasterxml/jackson/databind/type/TypeFactory;=Func12254();
cls=Func12291();
Func12292();
_serializerCache=Func12311();
_config=Func12312(this._serFeatures, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._serializationConfig);
_serializerFactory=Func12313(this._serFeatures, this._mask, com.fasterxml.jackson.databind.SerializationFeature.WRAP_ROOT_VALUE, this._serializationConfig, this._serializerFactory);
hasNativeIds=Func12338(this._hasNativeTypeIds, this._hasNativeObjectIds, stack11, this);
_hasNativeObjectIds=Func12340();
_hasNativeTypeIds=Func12341();
_appendAt=Func12342();
Func12343(this);
_writeContext=Func12348();
_objectCodec=Func12350(codec);
$stack9=Func12351();
com.fasterxml.jackson.databind.type.TypeFactory#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func3964();
_superClass=Func3965();
_bindings=Func3966(bindings);
Func3969(bindings, raw, superInterfaces);
com.fasterxml.jackson.databind.type.TypeFactory#_resolveSuperInterfaces(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;=Func3970();
resultType=Func12355(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Line 1375 com.fasterxml.jackson.databind.type.TypeFactory:_resolveSuperClass ---> if (parent == null) {
Line 1332 com.fasterxml.jackson.databind.type.TypeFactory:_fromClass ---> if (rawType.isInterface()) {
Line 1323 com.fasterxml.jackson.databind.type.TypeFactory:_fromClass ---> if (rawType.isArray()) {
Line 1309 com.fasterxml.jackson.databind.type.TypeFactory:_fromClass ---> context = new ClassStack(rawType);
Func3972(bindings);
result#4=Func12356(this, com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
feats=Func3976();
value=Func3977();
root=Func3979(stack4);
Line 4262 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> return resultNode;
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func12357();
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func12360(nodeFactory, p, ctxt);
Func12362(this._children, stack2);
Func12368(this._children);
com.fasterxml.jackson.databind.node.ObjectNode#replace(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;=Func12373(nodeFactory, p, ctxt);
_value=Func12375(nodeFactory, p, ctxt);
_value=Func12383(this._nodeFactory);
_value=Func12400(this._nodeFactory);
_children=Func12434();
_value=Func12527();
_value=Func12555();
_value=Func12558();
_value=Func12561();
Line 66 com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer:deserialize ---> switch (p.currentTokenId()) {
Line 4254 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> resultNode = (JsonNode) deser.deserialize(p, ctxt);
Func12587(this._mask, com.fasterxml.jackson.databind.DeserializationFeature.UNWRAP_ROOT_VALUE);
com.fasterxml.jackson.databind.ObjectMapper#createDeserializationContext(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationConfig;)Lcom/fasterxml/jackson/databind/deser/DefaultDeserializationContext;=Func12619(p, this._deserializationContext, jp, this._attributes, this._view, stack4, src._factory, src._cache);
_featureFlags=Func12631();
_config=Func12634();
Line 4249 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> ctxt = createDeserializationContext(p, cfg);
$stack4=Func12643(p0);
com.fasterxml.jackson.databind.ObjectMapper#constructType(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;=Func12646(result);
Line 1219 com.fasterxml.jackson.databind.type.TypeFactory:_findWellKnownSimple ---> if (clz == CLS_JSON_NODE) return CORE_TYPE_JSON_NODE; // since 2.10
desc=Func12655(com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS);
Line 4222 com.fasterxml.jackson.databind.ObjectMapper:_readTreeAndClose ---> final JavaType valueType = constructType(JsonNode.class);
$stack4=Func4746();
$stack2=Func4747();
_deserializationContext=Func12660(this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators, this._abstractTypeResolvers, this._factoryConfig, src._attributes, stack9, stack7._deserializationContext, stack4._factory, stack3._deserializationContext, stack8, src._injectableValues, stack7, src._parser, stack6, src._view, src._featureFlags, stack5, src._config, stack4, stack3, stack2);
_factory=Func12668(this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators, this._abstractTypeResolvers, this._factoryConfig, src._attributes, stack9, stack7._deserializationContext, stack4._factory, stack3._deserializationContext, stack8, src._injectableValues, stack7, src._parser, stack6, src._view, src._featureFlags, stack5, src._config, stack4, stack3);
_cache=Func12669(src._cache, stack3);
_factoryConfig=Func12678(this._additionalKeyDeserializers, this._modifiers, this._valueInstantiators, this._abstractTypeResolvers, this._factoryConfig);
_serializerFactory=Func12748(this._additionalSerializers, this._additionalKeySerializers, this._modifiers, this._factoryConfig, stack4);
_factoryConfig=Func12751(this._additionalSerializers, this._additionalKeySerializers, this._modifiers, this._factoryConfig);
Line 782 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func12878();
Line 781 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
Line 778 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
com.fasterxml.jackson.databind.module.SimpleModule#getModuleName()Ljava/lang/String;=Func12879();
Line 777 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
Line 4412 com.fasterxml.jackson.databind.ObjectMapper:_assertNotNull ---> if (src == null) {
Line 773 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> _assertNotNull('module', module);
Line 220 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new ThreeTenModule());
com.fasterxml.jackson.databind.ObjectMapper#registerModule(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;=Func12880();
_deserializationContext=Func12881(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._factoryConfig, this._keyDeserializers, stack5, stack3._deserializationContext, stack4._factory, stack7._deserializationContext, stack2, stack3);
_attributes=Func12883(src._attributes, stack9);
_injectableValues=Func12884(stack8, src._injectableValues);
_parser=Func12885(stack7, src._parser);
_view=Func12886(stack6, src._view);
_featureFlags=Func12887(src._featureFlags, stack5);
_config=Func12888(src._config, stack4);
_factory=Func12889(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._factoryConfig, this._keyDeserializers, stack5, stack3._deserializationContext, stack4._factory, stack7._deserializationContext, stack2, stack3);
_cache=Func12890(src._cache, stack3);
_factoryConfig=Func12899(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._factoryConfig, this._keyDeserializers, stack5);
_valueInstantiators=Func12907(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._keyDeserializers);
_abstractTypeResolvers=Func12908(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._keyDeserializers);
_modifiers=Func12909(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._keyDeserializers);
_additionalKeyDeserializers=Func12910(this._additionalKeyDeserializers, this._additionalDeserializers, this._valueInstantiators, this._modifiers, this._abstractTypeResolvers, this._keyDeserializers);
_attributes=Func12932(src._attributes, stack9);
_injectableValues=Func12933(stack8, src._injectableValues);
_parser=Func12934(stack7, src._parser);
_view=Func12935(src._view, stack6);
_featureFlags=Func12936(src._featureFlags, stack5);
_config=Func12937(src._config, stack4);
_cache=Func12939(stack3, src._cache);
_serializerFactory=Func12980(stack5);
com.fasterxml.jackson.databind.ser.BasicSerializerFactory#withAdditionalSerializers(Lcom/fasterxml/jackson/databind/ser/Serializers;)Lcom/fasterxml/jackson/databind/ser/SerializerFactory;=Func12981(stack5, this._additionalSerializers, this._additionalKeySerializers, this._modifiers, this._factoryConfig, stack4);
_factoryConfig=Func12985(stack5, this._additionalSerializers, this._additionalKeySerializers, this._modifiers, this._factoryConfig);
_modifiers=Func12994(this._additionalSerializers, this._additionalKeySerializers, this._modifiers);
_additionalKeySerializers=Func12995(this._additionalSerializers, this._additionalKeySerializers, this._modifiers);
_additionalSerializers=Func12996(this._additionalSerializers);
Func13016(typeId#2, this._registeredModuleTypes, stack19);
com.fasterxml.jackson.databind.module.SimpleModule#getTypeId()Ljava/lang/Object;=Func13018(this);
Line 782 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func13030();
Line 781 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
Line 778 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
Line 777 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
Line 4412 com.fasterxml.jackson.databind.ObjectMapper:_assertNotNull ---> if (src == null) {
Line 773 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> _assertNotNull('module', module);
Line 219 org.openapitools.codegen.utils.JsonCacheTest:setUp ---> mapper.registerModule(new JodaModule());
_keyDeserializers=Func13031();
com.fasterxml.jackson.databind.ObjectMapper#registerModule(Lcom/fasterxml/jackson/databind/Module;)Lcom/fasterxml/jackson/databind/ObjectMapper;=Func13034(this);
_deserializationContext=Func13035();
_attributes=Func13036(src._attributes, stack9);
_injectableValues=Func13037(stack8, src._injectableValues);
_parser=Func13038(stack7, src._parser);
_view=Func13039(src._view, stack6);
_featureFlags=Func13040(src._featureFlags, stack5);
_config=Func13041(src._config, stack4);
_factory=Func13042();
_cache=Func13043(stack3, src._cache);
_factoryConfig=Func13048(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers, stack5);
_valueInstantiators=Func13052();
_abstractTypeResolvers=Func13053(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers);
_modifiers=Func13054(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers);
_additionalKeyDeserializers=Func13055(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers);
_additionalDeserializers=Func13056(this._modifiers, this._additionalKeyDeserializers, this._valueInstantiators, this._abstractTypeResolvers);
_attributes=Func13067(src._attributes, stack9);
_injectableValues=Func13068(stack8, src._injectableValues);
_parser=Func13069(stack7, src._parser);
_view=Func13070(stack6, src._view);
_featureFlags=Func13071(src._featureFlags, stack5);
_config=Func13072(stack4, src._config);
_cache=Func13074(stack3, src._cache);
_serializerFactory=Func13110(stack4, this._modifiers, this._additionalSerializers, this._keySerializers, stack5, config);
_factoryConfig=Func13113(this._modifiers, this._additionalSerializers, this._keySerializers, stack5, config);
_modifiers=Func13121(this._modifiers, this._additionalSerializers, this._keySerializers);
_additionalKeySerializers=Func13122(this._keySerializers);
_additionalSerializers=Func13123(this._modifiers, this._additionalSerializers, this._keySerializers);
_attributes=Func13137(src._attributes);
_injectableValues=Func13138(src._injectableValues);
_parser=Func13139();
_view=Func13140(src._view);
_featureFlags=Func13141(src._featureFlags);
_config=Func13142(src._config);
_cache=Func13144(src._cache);
$stack5=Func5273(config, this);
$stack9=Func13184(config);
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig#withAdditionalSerializers(Lcom/fasterxml/jackson/databind/ser/Serializers;)Lcom/fasterxml/jackson/databind/cfg/SerializerFactoryConfig;=Func13187(stack5, this._factoryConfig, this._additionalKeySerializers, this._modifiers);
_modifiers=Func13189(this._additionalKeySerializers, this._modifiers);
_additionalKeySerializers=Func13190(this._additionalKeySerializers, this._modifiers);
_additionalSerializers=Func13191();
$stack5=Func13205(this._registeredModuleTypes, typeId#2);
_registeredModuleTypes=Func13206();
com.fasterxml.jackson.databind.module.SimpleModule#getTypeId()Ljava/lang/Object;=Func13209(this);
Line 782 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (version == null) {
com.fasterxml.jackson.databind.module.SimpleModule#version()Lcom/fasterxml/jackson/core/Version;=Func13221();
Line 781 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> Version version = module.version();
Line 778 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> if (name == null) {
com.fasterxml.jackson.databind.module.SimpleModule#getModuleName()Ljava/lang/String;=Func13222();
Line 777 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> String name = module.getModuleName();
Line 4412 com.fasterxml.jackson.databind.ObjectMapper:_assertNotNull ---> if (src == null) {
Line 773 com.fasterxml.jackson.databind.ObjectMapper:registerModule ---> _assertNotNull('module', module);
_keySerializers=Func13223();
_nodeFactory=Func5314(src._nodeFactory);
_configOverrides=Func5315(src._configOverrides);
_attributes=Func5316(src._attributes);
_view=Func5317(src._view);
_rootName=Func5318(src._rootName);
_mixIns=Func5319(src._mixIns);
_mapperFeatures=Func5320(this._parserFeatures, this._parserFeaturesToChange, this._formatReadFeaturesToChange, this._formatReadFeatures, this._deserFeatures, this._mask, com.fasterxml.jackson.databind.DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, this._mapperFeatures);
_base=Func5321(src._base);
_serializationConfig=Func5329();
_serFeatures=Func5331(com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT, this._serFeatures, this._mask);
_configOverrides=Func5332();
_attributes=Func5333();
_view=Func5334();
_rootName=Func5335();
_mixIns=Func5336();
_mapperFeatures=Func5337(this._mapperFeatures, com.fasterxml.jackson.databind.SerializationFeature.INDENT_OUTPUT, this._serFeatures, this._mask);
_base=Func5338();
_factoryConfig=Func5347();
_modifiers=Func13224(stack4);
_modifiers=Func5349();
_additionalKeySerializers=Func13225(stack6);
_additionalKeySerializers=Func5351();
_additionalSerializers=Func5352();
_deserializationContext=Func5354();
_attributes=Func13226();
_view=Func13227();
_injectableValues=Func13228();
_config=Func13229();
_featureFlags=Func13230();
_cache=Func13231(stack5, this);
Line 59 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> _cachedDeserializers = new LRUMap<>(initial, maxSize);
_map=Func13233(initialEntries);
Line 59 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> _cachedDeserializers = new LRUMap<>(initial, maxSize);
Line 58 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> int initial = Math.min(64, maxSize>>2);
$stack9=Func13234();
Line 57 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> public DeserializerCache(int maxSize) {
Line 54 com.fasterxml.jackson.databind.deser.DeserializerCache:<init> ---> this(2000); // see [databind#1995]
$stack7=Func13235();
Line 158 com.fasterxml.jackson.databind.DeserializationContext:<init> ---> _factory = Objects.requireNonNull(df, 'Cannot pass null DeserializerFactory');
_valueInstantiators=Func13237(stack6);
_valueInstantiators=Func5366();
_abstractTypeResolvers=Func13238(stack8);
_abstractTypeResolvers=Func5368();
_modifiers=Func13239(stack11);
_modifiers=Func5370();
_additionalKeyDeserializers=Func13240(stack14);
_additionalKeyDeserializers=Func5372();
_additionalDeserializers=Func5373();
Line 55 com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:<clinit> ---> private final static Class<?> CLASS_SERIALIZABLE = Serializable.class;
_formatReadFeaturesToChange=Func13241();
_formatReadFeatures=Func13242();
_parserFeaturesToChange=Func13243();
_parserFeatures=Func13244();
_nodeFactory=Func13245();
Line 107 com.fasterxml.jackson.databind.DeserializationConfig:<init> ---> _deserFeatures = DESER_FEATURE_DEFAULTS;
_configOverrides=Func13252(configOverrides);
_attributes=Func13253();
_view=Func13258();
_rootName=Func13259();
_mixIns=Func13260();
_mapperFeatures=Func13261(mapperFeatures);
_base=Func13262(base);
Func5628(base, com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES);
this.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>=Func5374(base, u3);
Line 32 com.fasterxml.jackson.databind.DeserializationConfig:<clinit> ---> private final static int DESER_FEATURE_DEFAULTS = collectFeatureDefaults(DeserializationFeature.class);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func13264(this._mask);
UNWRAP_ROOT_VALUE=Func13393(stack18);
_mask=Func13394();
FAIL_ON_UNKNOWN_PROPERTIES=Func13463(stack4);
_mask=Func13464();
USE_BIG_DECIMAL_FOR_FLOATS=Func13483(stack0);
_mask=Func13484();
Line 32 com.fasterxml.jackson.databind.DeserializationConfig:<clinit> ---> private final static int DESER_FEATURE_DEFAULTS = collectFeatureDefaults(DeserializationFeature.class);
_serializationConfig=Func5630();
Line 119 com.fasterxml.jackson.databind.SerializationConfig:<init> ---> _serFeatures = SER_FEATURE_DEFAULTS;
_mapperFeatures=Func5776(base, com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES);
Line 41 com.fasterxml.jackson.databind.SerializationConfig:<clinit> ---> private final static int SER_FEATURE_DEFAULTS = collectFeatureDefaults(SerializationFeature.class);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func13490();
INDENT_OUTPUT=Func13624(stack1);
_mask=Func13625();
WRAP_ROOT_VALUE=Func13629(stack0);
_mask=Func13630();
Line 41 com.fasterxml.jackson.databind.SerializationConfig:<clinit> ---> private final static int SER_FEATURE_DEFAULTS = collectFeatureDefaults(SerializationFeature.class);
DEFAULT_MAPPER_FEATURES=Func5778(stack1);
com.fasterxml.jackson.databind.cfg.MapperConfig#collectFeatureDefaults(Ljava/lang/Class;)I=Func13636(stack12, flags, this._mask);
flags=Func5780(stack12, flags);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5781(this._mask);
flags=Func5786(stack12);
com.fasterxml.jackson.databind.MapperFeature#getMask()I=Func5787(this._mask);
_mask=Func13644(this);
_defaultState=Func13645();
_mask=Func5798(this);
_defaultState=Func5799();
Line 491 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> IGNORE_DUPLICATE_MODULE_REGISTRATIONS(true),
_mask=Func5800(this);
_defaultState=Func5801();
Line 466 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> ALLOW_COERCION_OF_SCALARS(true),
_mask=Func5802(this);
_defaultState=Func5803();
Line 438 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> ALLOW_EXPLICIT_PROPERTY_RENAMING(false),
_mask=Func5804();
Line 427 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> USE_STD_BEAN_NAMING(false),
_mask=Func5806();
Line 411 com.fasterxml.jackson.databind.MapperFeature:<clinit> ---> USE_WRAPPER_NAME_AS_PROPERTY_NAME(false),
com.fasterxml.jackson.databind.cfg.BaseSettings#withClassIntrospector(Lcom/fasterxml/jackson/databind/introspect/ClassIntrospector;)Lcom/fasterxml/jackson/databind/cfg/BaseSettings;=Func5808(this, stack3);
Line 161 com.fasterxml.jackson.databind.cfg.BaseSettings:<init> ---> _typeValidator = ptv;
Func5809(this._typeValidator);
Line 82 com.fasterxml.jackson.databind.type.SimpleType:constructUnsafe ---> return new SimpleType(raw, null,
Line 47 com.fasterxml.jackson.databind.introspect.BasicClassIntrospector:<clinit> ---> LONG_DESC = BasicBeanDescription.forOtherUse(null, SimpleType.constructUnsafe(Long.TYPE),
this.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>=Func5813(com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_BASE);
_mixIns=Func5814();
_typeFactory=Func5815();
Line 21 com.fasterxml.jackson.databind.util.RootNameLookup:<init> ---> public RootNameLookup() {
_jsonFactory=Func5816();
Line 354 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Base64Variants.getDefaultVariant(), // 2.1
Line 161 com.fasterxml.jackson.databind.cfg.BaseSettings:<init> ---> _typeValidator = ptv;
Line 354 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Base64Variants.getDefaultVariant(), // 2.1
Line 20 com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator:<clinit> ---> public final static LaissezFaireSubTypeValidator instance = new LaissezFaireSubTypeValidator();
Line 15 com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator:<init> ---> public final class LaissezFaireSubTypeValidator
Line 20 com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator:<clinit> ---> public final static LaissezFaireSubTypeValidator instance = new LaissezFaireSubTypeValidator();
Line 354 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Base64Variants.getDefaultVariant(), // 2.1
Line 352 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> Locale.getDefault(),
Line 120 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_JSON_NODE = new SimpleType(CLS_JSON_NODE);
_superInterfaces=Func13647();
_superClass=Func13648();
_bindings=Func13649(bindings);
_hash=Func13653(raw);
_class=Func13654(raw);
Func13655(this);
asStatic=Func5812(this, bindings, cls);
asStatic=Func4358(this, bindings, cls);
Func13656(stack2, this, cls);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func13657();
Line 120 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_JSON_NODE = new SimpleType(CLS_JSON_NODE);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5820();
_bindings=Func5822(bindings);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5825();
Line 88 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_OBJECT = new SimpleType(CLS_OBJECT);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5829();
Line 85 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_STRING = new SimpleType(CLS_STRING);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5832();
CORE_TYPE_BOOL=Func13659(stack6);
_superInterfaces=Func5834();
_bindings=Func5835(bindings);
asStatic=Func5830(bindings, this, cls);
asStatic=Func5837(bindings, cls);
this.<com.fasterxml.jackson.databind.type.TypeFactory: java.lang.ClassLoader _classLoader>=Func5838(stack2, cls);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5839();
Line 80 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_BOOL = new SimpleType(CLS_BOOL);
NO_BINDINGS=Func5848(stack0);
com.fasterxml.jackson.databind.type.TypeBindings#emptyBindings()Lcom/fasterxml/jackson/databind/type/TypeBindings;=Func5841();
Line 19 com.fasterxml.jackson.databind.type.TypeBase:<clinit> ---> private final static TypeBindings NO_BINDINGS = TypeBindings.emptyBindings();
Line 80 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> protected final static SimpleType CORE_TYPE_BOOL = new SimpleType(CLS_BOOL);
Line 67 com.fasterxml.jackson.databind.type.TypeFactory:<clinit> ---> private final static Class<?> CLS_JSON_NODE = JsonNode.class; // since 2.10
EMPTY_BINDINGS=Func5840(stack2);
Line 68 com.fasterxml.jackson.databind.type.TypeBindings:emptyBindings ---> return EMPTY;
Line 350 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> null, TypeFactory.defaultInstance(),
Line 347 com.fasterxml.jackson.databind.ObjectMapper:<clinit> ---> protected final static BaseSettings DEFAULT_BASE = new BaseSettings(
